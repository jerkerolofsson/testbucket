@using TestBucket.Components.Comments
@using TestBucket.Components.Comments.Controls
@using TestBucket.Components.Tests.TestRuns.Controllers
@using TestBucket.Components.Uploads.Services
@using TestBucket.Domain
@inject FieldController fieldService
@inject TestCaseEditorController testCaseEditorController
@inject NavigationManager navigationManager
@inject TestRunCreationController testRunCreation
@inject AppNavigationManager appNavigationManager
@inject ITestCompiler compiler
@inject ISnackbar snackbar
@inject IStringLocalizer<SharedStrings> loc
@inject CommentsController comments
@inject UploadService uploads

@if (Test is not null)
{
    <div class="container-fill" data-testid="testcase-editor" @attributes="AdditionalAttributes">
        <Splitter Class="container-fill" Bordered="false" Dimension="80" EnableMargin="false" Color="Color.Default">
            <StartContent>
                <MudStack Class="pa-2" Style="width: 100%; height: 100%">

                    <MudStack Spacing="3" Row AlignItems="AlignItems.Center">
                        @if (_preview)
                        {
                            <MudText Typo="Typo.h1" Color="Color.Primary" data-testid="external-display-id" data-id="@Test.ExternalDisplayId">@Test.ExternalDisplayId</MudText>
                            <MudText Typo="Typo.h1">@Test.Name</MudText>
                        }
                        else
                        {
                            <MudTextField Variant="Variant.Outlined" Label="Name" AdornmentColor="Color.Tertiary" Value="@Test.Name" ValueChanged="OnNameChanged" T="string" />
                        }
                    </MudStack>

                    @if (_errors.Count > 0)
                    {
                        foreach (var error in _errors)
                        {
                            <MudStack Row>
                                <MudIcon Color="Color.Warning" Icon="@Icons.Material.Outlined.Warning" />
                                <MudText>Line @error.Line</MudText>
                                <MudText>Column @error.Column</MudText>
                                <MudText>@error.Message</MudText>
                            </MudStack>
                        }
                    }

                    <MarkdownEditor Value="@Text"
                                    @ref=_editor
                                    UploadHandler="@UploadHandler"
                                    EnableRunCode
                                    EnableCopyCodeToClipboard
                                    RunCodeLanguages="http pwsh"
                                    RunCode="OnRunCodeClickedAsync"
                                    ValueChanged="OnDescriptionChanged"
                                    Preview="@_preview"
                                    PreviewChanged="OnPreviewChanged"
                                    TextAreaClass="tb-test-description" />

                    <CommentThread Comments="@_comments" CommentAdded="OnCommentAdded" CommentDeleted="OnCommentDeleted" />
                </MudStack>
            </StartContent>
            <EndContent>

                <MudStack Class="pa-2" Style="width: calc(100% - 8px)">

                    <Field>
                        <FieldHeader>@loc["created"]</FieldHeader>
                        <MudStack Row AlignItems="AlignItems.Center">
                            <TestBucket.Components.Shared.Profile.UserProfileImage UserName="@Test.CreatedBy" />
                            <div>@Test.Created.Humanize()</div>
                        </MudStack>
                    </Field>

                    <FieldsEditor TestCase="@Test" ReadOnly="@(_preview)" />

                </MudStack>
            </EndContent>
        </Splitter>

    </div>
}



