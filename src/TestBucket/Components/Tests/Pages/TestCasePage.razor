@attribute [Authorize()]
@page "/{TenantId}/Testing/TestCases/{TestCaseId:long}"
@using TestBucket.Components.Tests.Layouts
@using TestBucket.Domain.Requirements.Models
@layout TestingLayout
@inject TestBrowser testBrowser
@inject TestCaseEditorController testCaseEditorService
@inject AppNavigationManager appNavigationManager

<TestCaseEditor Test="@_testCase" TestChanged="OnTestModified" />

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }

    [Parameter] public long TestCaseId { get; set; }

    private TestCase? _testCase = null;

    /// <summary>
    /// Load the test case when changed
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (_testCase is null || _testCase.Id != TestCaseId)
        {
            _testCase = await testBrowser.GetTestCaseByIdAsync(TestCaseId);
            appNavigationManager.State.SelectedTestCase = _testCase;
        }
    }

    private async Task OnTestModified(TestCase test)
    {
        await testCaseEditorService.SaveTestCaseAsync(test);
    }
}
