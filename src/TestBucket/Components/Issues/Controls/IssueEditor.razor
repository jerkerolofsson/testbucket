@using TestBucket.Components.Comments.Controls
@inject IStringLocalizer<SharedStrings> loc
@inject IStringLocalizer<IssueStrings> issueLoc

@if (Issue is not null)
{
    <MudSplitter>
        <StartContent>
            <MudStack Style="width: 100%" Class="pa-2">

                <MudStack Spacing="0">
                    <FieldHeader>@loc["title"]</FieldHeader>
                    <MudTextField Variant="Variant.Outlined" T="string" @bind-Value="@Issue.Title"></MudTextField>
                </MudStack>

                <MudStack Spacing="0">
                    <FieldHeader>@loc["description"]</FieldHeader>
                    <MarkdownEditor @bind-Value="@Issue.Description" @bind-Preview="@_preview" />
                </MudStack>
            </MudStack>
        </StartContent>
        <EndContent>
            <MudStack Style="width: 100%" Class="pa-2">
                <FieldsEditor Issue="@Issue"/>
            </MudStack>
        </EndContent>
    </MudSplitter>
}

@code {
    [Parameter] public LocalIssue? Issue { get; set; }
    [Parameter] public EventCallback<LocalIssue> IssueChanged { get; set; }
    [Parameter] public long? TestProjectId { get; set; }

    private bool _preview = false;

    private async Task OnDescriptionChanged(string description)
    {
        if (Issue is null) return;

        Issue.Description = description;
        await IssueChanged.InvokeAsync(Issue);
    }
    private async Task OnTitleChanged(string title)
    {
        if (Issue is null) return;

        Issue.Title = title;
        await IssueChanged.InvokeAsync(Issue);
    }

}
