@if(Field?.FieldDefinition is not null) 
{
    <Field>
        <FieldHeader>@Field.FieldDefinition.Name</FieldHeader>

        @if(Field.FieldDefinition.ReadOnly)
        {
            <MudText Class="tb-read-only-field">
                @if (Field.FieldDefinition.Type is (FieldType.String or FieldType.SingleSelection) )
                {
                    @Field.StringValue
                }
                else if (Field.FieldDefinition.Type == FieldType.Boolean)
                {
                    @Field.BooleanValue
                }
                else if (Field.FieldDefinition.Type == FieldType.Double)
                {
                    @Field.DoubleValue
                }
                else if (Field.FieldDefinition.Type == FieldType.ChipField && Field.StringValue is not null)
                {
                    <MudChipSet T="string">
                        @foreach(var tag in Field.StringValue.Split(' '))
                        {
                            <MudChip T="string">@tag</MudChip>
                        }
                    </MudChipSet>
                }
            </MudText>
        }
        else
        {

            @if(Field.FieldDefinition.Type == FieldType.String)
            {
                <MudTextField Value="@Field.StringValue" T="string" ValueChanged="OnStringValueChanged" Variant="Variant.Outlined"/>
            }
            else if(Field.FieldDefinition.Type == FieldType.SingleSelection)
            {
                <MudSelect Value="@Field.StringValue" T="string" ValueChanged="OnStringValueChanged" Variant="Variant.Outlined">
                    @if(Field.FieldDefinition.Options is not null)
                    {
                        @foreach(var item in Field.FieldDefinition.Options)
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    }
                </MudSelect>
            }
            else if(Field.FieldDefinition.Type == FieldType.Boolean)
            {
                <MudSwitchM3 Value="@Field.BooleanValue" T="bool?" ValueChanged="OnBooleanValueChanged" Color="Color.Tertiary" />
            }
            else if (Field.FieldDefinition.Type == FieldType.ChipField)
            {
                <MudChipField T="string" @bind-Value="Field.StringValue" ChipColor="Color.Tertiary" Variant="Variant.Outlined">

                </MudChipField>
            }
        }
    </Field>
}

@code {
    [Parameter] public FieldValue? Field { get; set; }
    [Parameter] public EventCallback<FieldValue?> FieldChanged { get; set; }

    private async Task OnStringValueChanged(string value)
    {
        if (Field is not null)
        {
            Field.StringValue = value;
            await FieldChanged.InvokeAsync(Field);
        }
    }
    private async Task OnBooleanValueChanged(bool? value)
    {
        if (Field is not null)
        {
            Field.BooleanValue = value;
            await FieldChanged.InvokeAsync(Field);
        }
    }
}
