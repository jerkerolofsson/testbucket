@using TestBucket.Contracts.Localization
@using TestBucket.Domain
@using TestBucket.Domain.Requirements.Models
@inject RequirementBrowser browser
@inject IDialogService dialogService
@inject FieldController fieldController
@inject NavigationManager navigationManager
@inject AppNavigationManager appNavigationManager
@inject IAppLocalization loc
@implements IDisposable

<MudDataGrid ServerData="LoadGridData"
             Class="tb-requirement-grid"
             Dense
             RowClassFunc="RowClassFunc"
             T="Requirement"
             RowClick="(e) => OnItemClicked(e.Item)"
             @ref="_dataGrid"
             SortMode="SortMode.None">

    <ToolBarContent>
        <MudStack Row="true" AlignItems="AlignItems.Center" Style="width: 100%">

            <MudTextField Value="@_searchPhrase" T="string" ValueChanged="OnSearch"
                          Class="mt-2 default-search"
                          Clearable="true"
                          Variant="Variant.Outlined"
                          IconSize="Size.Small"
                          Adornment="Adornment.Start"
                          Placeholder="@loc.Shared["search-tests"]"
                          AdornmentIcon="@Icons.Material.Filled.Search" />
            <SemanticSearchToggle @bind-Enabled="@_semanticSearch" EnabledLabel="@loc.Shared["semantic-search"]" DisabledLabel="@loc.Shared["normal-search"]" />
            <MudSpacer />

            @if(_hasCustomFilter)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Clear" OnClick="ResetFilter"></MudIconButton>
            }


        </MudStack>
    </ToolBarContent>

    <ColGroup>
        <col style="width: 100%;" />
        <col style="width: 120px;" />
        <col style="width: 120px;" />
        <col style="width: 120px;" />
        <col style="width: 70px;" />
    </ColGroup>
    <Columns>
        <TemplateColumn Title="@loc.Shared["name"]">
            <CellTemplate>
                <Draggable T="Requirement" Data="@context.Item">
                    <MudStack Row AlignItems="AlignItems.Center">
                        <MudIcon Icon="@RequirementIcons.GetIcon(context.Item)" />
                        @context.Item.Name
                    </MudStack>
                </Draggable>
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="@loc.Shared["type"]">
            <CellTemplate>
                @if (context.Item?.RequirementType is not null)
                {
                    var label = "type-" + context.Item.RequirementType.ToLower();
                    <Chip Text="@loc.Requirements[label]" Color="@RequirementColors.GetColor(context.Item)" />
                }
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn Title="@loc.Shared["state"]">
            <CellTemplate>
                @if (context.Item is not null)
                {
                    @context.Item.State
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="@loc.Shared["modified"]">
            <CellTemplate>
                @if (context.Item is not null)
                {
                    @context.Item.Modified.Humanize()
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn StickyRight>
            <CellTemplate>
                <MudMenu Class="rounded-0" Icon="@Icons.Material.Filled.MoreVert" OpenChanged="() => SetSelectedRequirement(context.Item)">
                    <CommandMenuItems TypeNames="Requirement" />
                </MudMenu>
            </CellTemplate>
        </TemplateColumn>
    </Columns>

    <PagerContent>
        <MudDataGridPager T="Requirement" />
    </PagerContent>
</MudDataGrid>
