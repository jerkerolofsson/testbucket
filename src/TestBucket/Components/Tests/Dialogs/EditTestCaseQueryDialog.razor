@attribute [Authorize(Roles = "ADMIN")]
@inject TestCaseEditorService testCaseEditorService

@if (Query is not null)
{
    <EditForm Model="@Query" OnValidSubmit="OnValidSubmit">
        <MudDialog DefaultFocus="DefaultFocus.FirstChild">
            <DialogContent>

                <Field>
                    <FieldHeader>Created</FieldHeader>
                    <MudDateRangePicker DateRange="@_dateRange" Margin="Margin.Dense" DateRangeChanged="OnDateRangeChanged" Clearable
                                        PlaceholderStart="Start Date" PlaceholderEnd="End Date" Label="Created" />
                </Field>

            </DialogContent>

            <DialogActions>
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">OK</MudButton>
                <MudButton OnClick="Close">Cancel</MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
}

@code {
    private string? _errorMessage;

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public SearchTestQuery? Query { get; set; }

    private DateRange _dateRange { get; set; } = new();

    private void OnDateRangeChanged(DateRange? range)
    {
        if(Query is not null)
        {
            Query.CreatedFrom = null;
            Query.CreatedUntil = null;

            if (range is not null)
            {
                _dateRange = range;

                if(range.Start is not null)
                {
                    Query.CreatedFrom = range.Start.Value.ToUniversalTime();
                }
                if (range.End is not null)
                {
                    Query.CreatedUntil = range.End.Value.ToUniversalTime();
                }
            }
        }
    }

    protected override void OnParametersSet()
    {
        if(Query is not null)
        {
            if(Query.CreatedFrom is not null)
            {
                _dateRange.Start = Query.CreatedFrom.Value.LocalDateTime;
            }
            if (Query.CreatedUntil is not null)
            {
                _dateRange.End = Query.CreatedUntil.Value.LocalDateTime;
            }
        }
    }

    private void Close()
    {
        MudDialog.Close();
    }

    private void  OnValidSubmit()
    {
      
        MudDialog.Close(Query);
    }
}

