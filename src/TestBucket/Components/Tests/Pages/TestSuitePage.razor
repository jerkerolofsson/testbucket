@attribute [Authorize()]
@page "/{TenantId}/Testing/TestSuites/{SuiteId:long}"
@using TestBucket.Components.Shared.Splitter
@using TestBucket.Components.Tests.Layouts
@using TestBucket.Domain.Requirements.Models
@layout TestingLayout
@inject TestBrowser testBrowser
@inject AppNavigationManager appNavigationManager

<div class="container-fill-2-rows">
    <div></div>
    <Splitter Class="container-fill" Bordered="false" Dimension="80" EnableMargin="false" Color="Color.Tertiary">
        <StartContent>
            <TestCaseGrid 
                Project="@Project" TestSuiteId="@SuiteId" CompareFolder="false" OnTestCaseClicked="OnTestCaseClicked" />
        </StartContent>
        <EndContent>
            <MudStack Class="pa-2" Style="width: 100%">
                <TestSuiteEditor TestSuite="@_testSuite" />
            </MudStack>
        </EndContent>
    </Splitter>
</div>

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }

    [Parameter] public long SuiteId { get; set; }

    private TestSuite? _testSuite = null;

    /// <summary>
    /// Load the test suite when changed
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (_testSuite is null || _testSuite.Id != SuiteId)
        {
            _testSuite = await testBrowser.GetTestSuiteByIdAsync(SuiteId);
        }
    }

    private void OnTestCaseClicked(TestCase testCase)
    {
        appNavigationManager.NavigateTo(testCase);
    }
}
