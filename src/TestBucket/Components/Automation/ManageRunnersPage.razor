@attribute [Authorize]
@layout SettingsLayout
@inject RunnersController controller
@page "/{tenantId}/settings/ManageRunners"
@using TestBucket.Components.Shared.Permissions
@using TestBucket.Domain
@using TestBucket.Domain.Automation.Runners.Models
@using TestBucket.Domain.Identity.Permissions
@inject IStringLocalizer<SharedStrings> loc
@inject AppNavigationManager appNav

<MudStack Class="container-settings-page">

    <MudBreadcrumbs Items="@_nav"></MudBreadcrumbs>

    <MudDataGrid Items="_runners"
                 Dense
                 Hover
                 RowClass="cursor-pointer tb-datarow"
                 T="Runner"
                 SortMode="SortMode.Single">

        <ToolBarContent>
            <MudStack Row AlignItems="AlignItems.Center" Style="width: 100%" Class="pt-5">
                <MudIcon Icon="@TbIcons.BoldDuoTone.Running" Size="Size.Large" Color="Color.Info" />
                <MudText Typo="Typo.h2">@loc["runners"]</MudText>
                <MudSpacer />
            </MudStack>
        </ToolBarContent>

        <ColGroup>
            <col />
            <col />
			<col />
            <col style="width: 65px"/>
        </ColGroup>


        <Columns>

            <PropertyColumn Property="x => x.Id" Title="@loc["id"]" />
            <PropertyColumn Property="x => x.Name" Title="@loc["name"]" />
				<TemplateColumn Title="@loc["languages"]">
					<CellTemplate>
						@if(context.Item.Languages is not null)
						{
							@string.Join(", ", context.Item.Languages)
						}
					</CellTemplate>
				</TemplateColumn>
            <TemplateColumn StickyRight>
                <CellTemplate>
                    <MudIconButton Icon="@Icons.Material.Filled.Clear" Color="Color.Error" OnClick="async() => await RemoveRunnerAsync(context.Item)"/>
                </CellTemplate>
            </TemplateColumn>
        </Columns>

    </MudDataGrid>

</MudStack>

@code {
    [Parameter] public string? TenantId { get; set; }
    private readonly List<BreadcrumbItem> _nav = [];

    private IReadOnlyList<Runner> _runners = [];

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
        SetupBreadcrumbs();
    }

    private async Task LoadAsync()
    {
        _runners = (await controller.GetRunnersAsync()).ToList();
    }

    private async Task RemoveRunnerAsync(Runner runner)
    {
        await controller.RemoveRunnerAsync(runner);
        await LoadAsync();
    }


    private void SetupBreadcrumbs()
    {
        _nav.Clear();
        _nav.Add(new BreadcrumbItem(loc["settings"], appNav.GetSettingsUrl()));
        _nav.Add(new BreadcrumbItem(loc["runners"], appNav.GetRunnersSettingsUrl()));
    }
}
