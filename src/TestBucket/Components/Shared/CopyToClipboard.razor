@inject IJSRuntime JSRuntime
@inject ISnackbar snackbar
@inject IStringLocalizer<SharedStrings> loc
@using MudBlazor

@if(ChildContent is null)
{
    <MudIconButton Size="@IconSize" Icon="@MudBlazor.Icons.Material.Filled.ContentCopy" OnClick="Copy"/>
}
else
{
    <MudStack Row Spacing="1" AlignItems="AlignItems.Center">
        @ChildContent
        <MudIconButton Size="@IconSize" Icon="@MudBlazor.Icons.Material.Filled.ContentCopy" OnClick="Copy" />
    </MudStack>
}

@code {
    /// <summary>
    /// Text top copy
    /// </summary>
    [Parameter] public string? Text { get; set; }

    [Parameter] public Size IconSize {get;set;} = Size.Medium;

    [Parameter] public RenderFragment? ChildContent { get; set; }

    private async Task Copy()
    {
        await JSRuntime.InvokeVoidAsync("tbClipboard.copyText", Text);
        snackbar.Add(loc["copied-to-clipboard-notification"], Severity.Normal);
    }
}
