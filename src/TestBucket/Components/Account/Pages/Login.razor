@page "/Account/Login"
@inject NavigationManager navigationManager
@inject TenantResolver tenantResolver

@code {
    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ReturnUrl is not null)
        {
            var tenantId = await tenantResolver.ResolveTenantIdFromUrlAsync(ReturnUrl);
            if (!string.IsNullOrEmpty(tenantId))
            {
                navigationManager.NavigateTo($"/{tenantId}/Account/Login?returnUrl={Uri.EscapeDataString(ReturnUrl)}", forceLoad: true);
            }
        }
    }
}
