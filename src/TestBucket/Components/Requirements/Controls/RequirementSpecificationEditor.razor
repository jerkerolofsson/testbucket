@inject RequirementEditorController editor

@if(Specification is not null)
{
    <MudStack Style="width: 100%">
        <MudTextField Value="@Specification.Name" ValueChanged="OnNameChanged" T="string" Variant="Variant.Outlined" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ExtractRequirementsFromSpecificationAsync">Extract requirements from specification</MudButton>

        <MarkdownEditor 
        ShowToolbar="false"
        MaxHeight="100%"
        Color="Color.Primary"
        AllowResize="true"
        Value="@Specification.Description"
        ValueChanged="OnDescriptionChanged"
        SpellChecker="false">
        </MarkdownEditor>
    </MudStack>
}

@code {
    [Parameter] public RequirementSpecification? Specification { get;set; }

    private async Task OnNameChanged(string name)
    {
        if(Specification is null)
        {
            return;
        }
        Specification.Name = name;
        await editor.SaveRequirementSpecificationAsync(Specification);
    }

    private async Task ExtractRequirementsFromSpecificationAsync()
    {
        if (Specification is null)
        {
            return;
        }
        await editor.ExtractRequirementsFromSpecificationAsync(Specification);
    }

    private async Task OnDescriptionChanged(string description)
    {
        if (Specification is null)
        {
            return;
        }
        Specification.Description = description;
        await editor.SaveRequirementSpecificationAsync(Specification);
    }
}
