@inject NavigationManager navigationManager
@implements IDisposable

<nav class="@CssClass" @onclick="OnClick">@ChildContent</nav>

@code {
    [Parameter] public string? Href { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    public string CssClass
    {
        get
        {
            if(currentUrl is not null && Href is not null)
            {
                if (currentUrl.Trim('/').StartsWith(Href.Trim('/')))
                {
                    return "tb-nav-link active";
                }
            }
            return "tb-nav-link";
        }          
    }

    private string? currentUrl;

    private void OnClick()
    {
        if (Href is not null)
        {
            navigationManager.NavigateTo(Href);
        }
    }

    protected override void OnInitialized()
    {
        currentUrl = navigationManager.ToBaseRelativePath(navigationManager.Uri);
        navigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = navigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        navigationManager.LocationChanged -= OnLocationChanged;
    }
}
