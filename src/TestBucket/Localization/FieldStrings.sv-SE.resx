<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add-custom-field" xml:space="preserve">
    <value>Lägg till anpassat fält</value>
  </data>
  <data name="add-new-field" xml:space="preserve">
    <value>Lägg till nytt fält</value>
  </data>
  <data name="advanced" xml:space="preserve">
    <value>Avancerad</value>
  </data>
  <data name="appearance" xml:space="preserve">
    <value>Utseende</value>
  </data>
  <data name="bug" xml:space="preserve">
    <value>Bugga</value>
    <comment>Label type</comment>
  </data>
  <data name="data-source" xml:space="preserve">
    <value>Datakälla</value>
  </data>
  <data name="data-source-type-commits" xml:space="preserve">
    <value>Uppmana</value>
  </data>
  <data name="data-source-type-components" xml:space="preserve">
    <value>Komponenter</value>
  </data>
  <data name="data-source-type-external" xml:space="preserve">
    <value>Hämta data från extern tjänst</value>
  </data>
  <data name="data-source-type-features" xml:space="preserve">
    <value>Drag</value>
  </data>
  <data name="data-source-type-issues" xml:space="preserve">
    <value>Utfärdar</value>
  </data>
  <data name="data-source-type-labels" xml:space="preserve">
    <value>Etiketter</value>
  </data>
  <data name="data-source-type-layers" xml:space="preserve">
    <value>Lager</value>
  </data>
  <data name="data-source-type-list" xml:space="preserve">
    <value>Användardefinierad lista</value>
  </data>
  <data name="data-source-type-milestones" xml:space="preserve">
    <value>Milstolpar</value>
  </data>
  <data name="data-source-type-releases" xml:space="preserve">
    <value>Utsläpp</value>
  </data>
  <data name="data-source-type-requirements" xml:space="preserve">
    <value>Krav</value>
  </data>
  <data name="data-source-type-systems" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="data-source-type-testcases" xml:space="preserve">
    <value>Testfall</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Beskrivning</value>
  </data>
  <data name="description-helpertext" xml:space="preserve">
    <value>En användbar beskrivning som kan visas för användaren</value>
  </data>
  <data name="documentation" xml:space="preserve">
    <value>Dokumentation</value>
    <comment>Label type</comment>
  </data>
  <data name="duplicate" xml:space="preserve">
    <value>Duplicera</value>
    <comment>Label type</comment>
  </data>
  <data name="enhancement" xml:space="preserve">
    <value>Förbättring</value>
    <comment>Label type</comment>
  </data>
  <data name="field-data-source-not-available" xml:space="preserve">
    <value>Datakällan är inte tillgänglig för denna typ av input</value>
  </data>
  <data name="field-icon" xml:space="preserve">
    <value>Fältikon</value>
  </data>
  <data name="field-options" xml:space="preserve">
    <value>Alternativ</value>
  </data>
  <data name="field-readonly" xml:space="preserve">
    <value>Skrivskyddad</value>
  </data>
  <data name="field-required-permission" xml:space="preserve">
    <value>Obligatorisk tillåtelse att redigera</value>
  </data>
  <data name="field-target" xml:space="preserve">
    <value>Mål</value>
  </data>
  <data name="field-target-helpertext" xml:space="preserve">
    <value>Definierar de typer av enheter som kan ha detta fält</value>
  </data>
  <data name="field-type" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="good first issue" xml:space="preserve">
    <value>Bra första nummer</value>
    <comment>Label type</comment>
  </data>
  <data name="grouping" xml:space="preserve">
    <value>Gruppering</value>
  </data>
  <data name="help wanted" xml:space="preserve">
    <value>Hjälp efterlyst</value>
    <comment>Label type</comment>
  </data>
  <data name="icons" xml:space="preserve">
    <value>Ikoner</value>
  </data>
  <data name="inherit" xml:space="preserve">
    <value>Ärva</value>
  </data>
  <data name="inherited" xml:space="preserve">
    <value>Ärftlig</value>
  </data>
  <data name="inherit-helpertext" xml:space="preserve">
    <value>Om det är aktiverat kommer enheter att ärva värdet från en moderenhet. Till exempel kan ett testfall ärva värdet från en mapp som ärver värdet från en testsvit, eller ett genomfört testfall kommer att ärva värdet från testfallet.</value>
  </data>
  <data name="input-type" xml:space="preserve">
    <value>Ingångstyp</value>
  </data>
  <data name="input-type-helpertext" xml:space="preserve">
    <value>Den typ av ingång UI -kontroll som kommer att visas för användaren att ange ett värde för fältet</value>
  </data>
  <data name="invalid" xml:space="preserve">
    <value>Ogiltig</value>
    <comment>Label type</comment>
  </data>
  <data name="name" xml:space="preserve">
    <value>Namn</value>
  </data>
  <data name="name-helpertext" xml:space="preserve">
    <value>Unikt namn för det anpassade fältet</value>
  </data>
  <data name="options" xml:space="preserve">
    <value>Inmatningsalternativ</value>
  </data>
  <data name="options-helpertext" xml:space="preserve">
    <value>Alternativ som användaren kan välja mellan för detta fält</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Förhandsvisning</value>
  </data>
  <data name="question" xml:space="preserve">
    <value>Fråga</value>
    <comment>Label type</comment>
  </data>
  <data name="show-description" xml:space="preserve">
    <value>Visningsbeskrivning</value>
  </data>
  <data name="trait" xml:space="preserve">
    <value>Fältrekleringskartläggning</value>
  </data>
  <data name="trait-helpertext" xml:space="preserve">
    <value>Väl definierat drag som detta fält kartlägger till. Egenskapen används för att kartlägga import/exportfält mellan olika format och kan användas för rapportering och analys</value>
  </data>
  <data name="trait-match-known-type" xml:space="preserve">
    <value>Denna egenskap matchar en välkänd typ</value>
  </data>
  <data name="use-classifier" xml:space="preserve">
    <value>AI -klassificering</value>
  </data>
  <data name="use-classifier-helpertext" xml:space="preserve">
    <value>Använder AI för att uppdatera detta fält, om det är tomt efter att ändringar har gjorts.</value>
  </data>
  <data name="use-predefined-field" xml:space="preserve">
    <value>Använd ett fördefinierat fält</value>
  </data>
  <data name="visible" xml:space="preserve">
    <value>Synlig</value>
  </data>
  <data name="wontfix" xml:space="preserve">
    <value>Kommer inte att fixa</value>
    <comment>Label type</comment>
  </data>
  <data name="default-value" xml:space="preserve">
    <value />
  </data>
</root>