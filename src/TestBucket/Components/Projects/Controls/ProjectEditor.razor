@using TestBucket.Components.Environments.Controls
@using TestBucket.Components.Teams
@using TestBucket.Components.Teams.Controls
@using TestBucket.Components.Uploads.Controls
@using TestBucket.Domain.Files.Models
@using TestBucket.Domain.Teams.Models
@inject ProjectController projectController
@inject TestEnvironmentController testEnvironmentController
@inject TeamController teamService
@inject IStringLocalizer<SharedStrings> loc
@inject IStringLocalizer<TestEnvironmentStrings> testEnvLoc
@inject IStringLocalizer<ProjectStrings> projectLoc

@if (Project is not null)
{
    string projectFieldsUrl = $"/{Project.TenantId}/Settings/Projects/{Project.Slug}/Fields";
    string projectIntegrationsUrl = $"/{Project.TenantId}/Settings/Projects/{Project.Slug}/Integrations";

    <EditForm Model="@Project" OnValidSubmit="async () => await OnValidSubmitAsync()">

        <MudStack Class="pa-5">

            <MudText Typo="Typo.h3">Name</MudText>
            <Field Row>
                <FieldHeader>@projectLoc["name-of-the-project"]</FieldHeader>
                <MudSpacer/>
                <MudTextField Variant="Variant.Outlined" T="string" @bind-Value="@Project.Name"></MudTextField>
            </Field>


            <Field Row>
                <FieldHeader>@testEnvLoc["default-environment"]</FieldHeader>
                <MudSpacer/>
                <EnvironmentDropDown Project="Project"
                    Team="_team"
                    SelectedEnvironment="@_selectedEnvironment" SelectedEnvironmentChanged="OnDefaultEnvironmentChanged" EnableAdd EnableSettings/>
            </Field>


            <FieldLink Href="@projectFieldsUrl" HeaderText="Fields" Description="Manage custom fields and traits"/>
            <FieldLink Href="@projectIntegrationsUrl" HeaderText="@projectLoc["integrations"]" Description="@projectLoc["integrations-description"]" />

            <MudText Typo="Typo.h3" Class="pa-3">Appearance</MudText>
            <Field>
                <MudStack Row AlignItems="AlignItems.Start">
                    <FieldHeader>@projectLoc["project-icon"]</FieldHeader>
                    <MudSpacer/>
                    @if(!string.IsNullOrEmpty(Project.IconUrl))
                    {
                        <MudImage Src="@Project.IconUrl" Width="64" Height="64"/>
                    }
                </MudStack>

                <UploadFile Style="width: 100%" Accept=".png" FileUploaded="OnImageUploaded" />
            </Field>

            <MudText Typo="Typo.h3" Class="pa-3">Access</MudText>
            <Field Row>
                <FieldHeader>@loc["team"]</FieldHeader>
                <MudSpacer/>
                <TeamDropDown SelectedTeam="_team" SelectedTeamChanged="OnTeamChanged" />
            </Field>

            <Field Row>
                <FieldHeader>Grant access to all users</FieldHeader>
                <MudSpacer/>
                <MudSwitchM3 T="bool" @bind-Value="@Project.GrantAccessToAllTenantUsers"/>
            </Field>

            <Field Row Spacing="3">

                <div style="flex: 1">
                <MudTooltip Text="@loc["short-name"]">
                    <CopyToClipboard Text="@Project.ShortName" IconSize="Size.Small">
                        <MudText Typo="Typo.subtitle1">@Project.ShortName</MudText>
                    </CopyToClipboard>
                </MudTooltip>
                </div>

                <MudDivider Vertical />

                <div style="flex: 1">
                <MudTooltip Text="@loc["slug"]">
                    <CopyToClipboard Text="@Project.Slug" IconSize="Size.Small">
                        <MudText Typo="Typo.subtitle1">@Project.Slug</MudText>
                    </CopyToClipboard>
                </MudTooltip>
                </div>

                <MudDivider Vertical/>

                <div style="flex: 1">
                <MudTooltip Text="@loc["id"]">
                    <CopyToClipboard Text="@Project.Id.ToString()" IconSize="Size.Small">
                        <MudText Typo="Typo.subtitle1">@Project.Id</MudText>
                    </CopyToClipboard>
                </MudTooltip>
                </div>

            </Field>
        </MudStack>

        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">@loc["save"]</MudButton>
    </EditForm>
}

@code {
    [Parameter] public TestProject? Project { get; set; }

    private Team? _team;
    private TestEnvironment? _selectedEnvironment;

    private async Task OnDefaultEnvironmentChanged(TestEnvironment testEnvironment)
    {
        _selectedEnvironment = testEnvironment;
        if(Project is not null)
        {
            await testEnvironmentController.SetDefaultEnvironmentAsync(Project.Id, testEnvironment);
        }
    }
    private async Task OnValidSubmitAsync()
    {
        if (Project is not null)
        {
            await projectController.SaveProjectAsync(Project);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Project?.TeamId is not null)
        {
            _team = await teamService.GetTeamByIdAsync(Project.TeamId.Value);
        }

        if(Project is not null)
        {
            _selectedEnvironment = await testEnvironmentController.GetDefaultEnvironmentAsync(Project.Id);
        }
    }

    private void OnTeamChanged(Team? team)
    {
        _team = team;
        if(Project is not null)
        {
            Project.TeamId = team?.Id;
        }
    }

    private void OnImageUploaded(FileResource file)
    {
        if(Project is not null)
        {
            Project.IconUrl = $"/api/resources/{file.Id}";
        }
    }
}
