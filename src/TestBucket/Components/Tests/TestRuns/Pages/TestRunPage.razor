@attribute [Authorize()]
@page "/{TenantId}/Testing/TestRuns/{RunId:long}"
@using TestBucket.Components.Tests.Layouts
@layout TestingLayout
@inject TestBrowser testBrowser
@inject AppNavigationManager appNavigationManager

@if(_testRun is not null)
{
    <TestRunMainView TestRun="@_testRun" />
}
else
{
    <MudProgressLinear Indeterminate Color="Color.Tertiary" />
}

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }

    [Parameter] public long RunId { get; set; }

    private TestRun? _testRun = null;

    /// <summary>
    /// Load the test case when changed
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (_testRun is null || _testRun.Id != RunId)
        {
            _testRun = await testBrowser.GetTestRunByIdAsync(RunId);
            appNavigationManager.State.SelectedTestRun = _testRun;
        }
    }
}
