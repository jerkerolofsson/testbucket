@inject TeamController teamService
@inject IStringLocalizer<SharedStrings> loc
@inject IStringLocalizer<ErrorStrings> errorLoc

<EditForm Model="@_name" OnValidSubmit="async () => await OnValidSubmitAsync()">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild" data-testid="add-team-dialog">
        <TitleContent>@loc["add-new-team"]</TitleContent>
        <DialogContent>
            <MudStack Spacing="0">
                @if (_name is not null)
                {
                    <MudTextField data-testid="name" Variant="Variant.Outlined" T="string" @bind-Value="@_name"></MudTextField>
                }
                @if (_errorMessage is not null)
                {
                    <MudAlert data-testid="error-message" Severity="Severity.Error">@_errorMessage</MudAlert>
                }
            </MudStack>
        </DialogContent>

        <DialogActions>
            <MudButton data-testid="ok" ButtonType="ButtonType.Submit" Color="Color.Primary">@loc["ok"]</MudButton>
            <MudButton data-testid="cancel" OnClick="Close">@loc["cancel"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>


@code {
    private string _name = "";
    private string _slug = "";
    private string _shortName = "";

    private string? _errorMessage;

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;


    private void Close()
    {
        MudDialog.Close();
    }

    private async Task OnValidSubmitAsync()
    {
        if (string.IsNullOrWhiteSpace(_name))
        {
            _errorMessage = errorLoc["invalid-name"];
            return;
        }

        _slug = teamService.GenerateSlug(_name);
        _shortName = await teamService.GenerateShortNameAsync(_slug);

        var result = await teamService.CreateAsync(_name);
        if (result.IsT0)
        {
            MudDialog.Close(result.AsT0);
        }
        else
        {
            _errorMessage = result.Match(
                (success) => "",
                (alreadyExists) => _errorMessage = errorLoc["already-exists"]
            );
        }
    }
}
