<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="variables" xml:space="preserve">
    <value>Variables</value>
  </data>
  <data name="test-environment" xml:space="preserve">
    <value>Test Environment</value>
  </data>
  <data name="test-environments" xml:space="preserve">
    <value>Test Environments</value>
  </data>
  <data name="attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="callstack" xml:space="preserve">
    <value>Call Stack</value>
  </data>
  <data name="message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="test-result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="result-passed" xml:space="preserve">
    <value>Passed</value>
  </data>
  <data name="result-norun" xml:space="preserve">
    <value>Not Executed</value>
  </data>
  <data name="result-blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="result-skipped" xml:space="preserve">
    <value>Skipped</value>
  </data>
  <data name="result-failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="unassigned" xml:space="preserve">
    <value>Unassigned</value>
  </data>
  <data name="assigned-to-me" xml:space="preserve">
    <value>Assigned to me</value>
  </data>
  <data name="run-test-again" xml:space="preserve">
    <value>Run again</value>
  </data>
  <data name="assigned-to" xml:space="preserve">
    <value>Assigned to</value>
  </data>
  <data name="tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="tenants" xml:space="preserve">
    <value>Tenants</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="expiry" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="confirm-delete-title" xml:space="preserve">
    <value>Delete item?</value>
  </data>
  <data name="confirm-delete-message" xml:space="preserve">
    <value>Do you really want to delete this item?</value>
  </data>
  <data name="api-keys" xml:space="preserve">
    <value>API Keys</value>
  </data>
  <data name="api-key" xml:space="preserve">
    <value>API Key</value>
  </data>
  <data name="test-case-variables-description" xml:space="preserve">
    <value>Test case variables contain parameters that override environment variables and can be used with templates to customize templates. A test parameter name is unique and there can only be one with the specific name. Data-driven test cases can have multiple configuration sets and a test case is executed once for each data-row.

Variables are defined in a test case as {{Key}} and when running a test case the {{Key}} will be replaced by a variable named {{Key}}. </value>
  </data>
  <data name="variable-key" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="variable-value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="requirement-coverage" xml:space="preserve">
    <value>Requirement Coverage</value>
  </data>
  <data name="users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="permission-none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="permission-read" xml:space="preserve">
    <value>Read-Only</value>
  </data>
  <data name="permission-write" xml:space="preserve">
    <value>Write</value>
  </data>
  <data name="permission-delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="role-read-only" xml:space="preserve">
    <value>Read Only</value>
  </data>
  <data name="role-site-admin" xml:space="preserve">
    <value>Site Administrator</value>
  </data>
  <data name="role-tenant-admin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="role-regular-user" xml:space="preserve">
    <value>Regular User</value>
  </data>
  <data name="missing-permission-general" xml:space="preserve">
    <value>You don't have the necessary permissions to view this content</value>
  </data>
  <data name="ci-cd" xml:space="preserve">
    <value>CI/CD</value>
  </data>
  <data name="test-suite-variables-description" xml:space="preserve">
    <value>These variables are added to tests executed from this test suite</value>
  </data>
  <data name="automation" xml:space="preserve">
    <value>Automation</value>
  </data>
  <data name="ci-cd-ref" xml:space="preserve">
    <value>CI/CD Ref. (Git)</value>
  </data>
  <data name="test-accounts" xml:space="preserve">
    <value>Test Accounts</value>
  </data>
  <data name="test-resources" xml:space="preserve">
    <value>Test Resources</value>
  </data>
  <data name="model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="field" xml:space="preserve">
    <value>Field</value>
  </data>
  <data name="fields" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="requirements" xml:space="preserve">
    <value>Requirements</value>
  </data>
  <data name="add-to-run" xml:space="preserve">
    <value>Add to run</value>
  </data>
  <data name="run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="ci-cd-system" xml:space="preserve">
    <value>CI/CD System</value>
  </data>
  <data name="modified" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="manufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="result-inconclusive" xml:space="preserve">
    <value>Inconclusive</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="groupby-category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="groupby-result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="filter-tests" xml:space="preserve">
    <value>Filter Tests</value>
  </data>
  <data name="search-tests" xml:space="preserve">
    <value>Search Tests</value>
  </data>
  <data name="created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="start-date" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="end-date" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="link-issue" xml:space="preserve">
    <value>Link issue</value>
  </data>
  <data name="file-name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="file-size" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="file-type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="no-permission-title" xml:space="preserve">
    <value>No permission!</value>
  </data>
  <data name="no-permission-message" xml:space="preserve">
    <value>You don't have permission to perform this action. Contact the administrator if you require permission for this.</value>
  </data>
  <data name="required-resources" xml:space="preserve">
    <value>Required Resources</value>
  </data>
  <data name="runner" xml:space="preserve">
    <value>Runner</value>
  </data>
  <data name="runners" xml:space="preserve">
    <value>Runners</value>
  </data>
  <data name="teams" xml:space="preserve">
    <value>Teams</value>
  </data>
  <data name="test-suites" xml:space="preserve">
    <value>Test Suites</value>
  </data>
  <data name="test-cases" xml:space="preserve">
    <value>Test Cases</value>
  </data>
  <data name="recent" xml:space="preserve">
    <value>Recent</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="batch-tag" xml:space="preserve">
    <value>Batch update..</value>
  </data>
  <data name="traceability" xml:space="preserve">
    <value>Traceability</value>
  </data>
  <data name="requirement-coverage--drop-requirements-helpertext" xml:space="preserve">
    <value>Drop requirements here to create a link between tests and the requirement</value>
  </data>
  <data name="link-requirement-to-test" xml:space="preserve">
    <value>Link requirement to test</value>
  </data>
  <data name="number-of-tests" xml:space="preserve">
    <value>Tests</value>
  </data>
  <data name="requirement" xml:space="preserve">
    <value>Requirement</value>
  </data>
  <data name="new-folder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="test-coverage" xml:space="preserve">
    <value>Test Coverage</value>
  </data>
  <data name="icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="icons" xml:space="preserve">
    <value>Icons</value>
  </data>
  <data name="option" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="data-source" xml:space="preserve">
    <value>Data source</value>
  </data>
  <data name="options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="advanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="copied-to-clipboard-notification" xml:space="preserve">
    <value>Copied to clipbard</value>
  </data>
  <data name="backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="create-test-run" xml:space="preserve">
    <value>Create run</value>
  </data>
  <data name="edit-test-run" xml:space="preserve">
    <value>Edit run</value>
  </data>
  <data name="pick-test-run" xml:space="preserve">
    <value>Pick run</value>
  </data>
  <data name="duplicate-test-run" xml:space="preserve">
    <value>Duplicate run</value>
  </data>
  <data name="delete-test-run" xml:space="preserve">
    <value>Delete run</value>
  </data>
  <data name="new-test" xml:space="preserve">
    <value>New test</value>
  </data>
  <data name="new-shared-steps" xml:space="preserve">
    <value>New shared steps</value>
  </data>
  <data name="permission-approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="permission-execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="milestones" xml:space="preserve">
    <value>Milestones</value>
  </data>
  <data name="calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="launch-automation" xml:space="preserve">
    <value>Launch Automation</value>
  </data>
  <data name="test-automation" xml:space="preserve">
    <value>Test Automation</value>
  </data>
  <data name="coverage-matrix" xml:space="preserve">
    <value>Coverage Matrix</value>
  </data>
  <data name="column" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="external-id" xml:space="preserve">
    <value>External ID</value>
  </data>
  <data name="slug" xml:space="preserve">
    <value>SLUG</value>
  </data>
  <data name="test-runs" xml:space="preserve">
    <value>Test Runs</value>
  </data>
  <data name="my-backlog" xml:space="preserve">
    <value>My Backlog</value>
  </data>
  <data name="failures" xml:space="preserve">
    <value>Failures</value>
  </data>
  <data name="pipelines" xml:space="preserve">
    <value>Pipelines</value>
  </data>
  <data name="tests" xml:space="preserve">
    <value>Tests</value>
  </data>
  <data name="add-comment" xml:space="preserve">
    <value>Add comment</value>
  </data>
  <data name="logged-action-approved" xml:space="preserve">
    <value>{0} approved this</value>
  </data>
  <data name="logged-action-statechange" xml:space="preserve">
    <value>{0} changed state to {1}</value>
  </data>
  <data name="delete-test" xml:space="preserve">
    <value>Delete test</value>
  </data>
  <data name="delete-run" xml:space="preserve">
    <value>Delete run</value>
  </data>
  <data name="duplicate-test" xml:space="preserve">
    <value>Duplicate test</value>
  </data>
  <data name="delete-test-suite" xml:space="preserve">
    <value>Delete test suite</value>
  </data>
  <data name="new-test-suite" xml:space="preserve">
    <value>New test suite</value>
  </data>
  <data name="batch-tag-description" xml:space="preserve">
    <value>Link a requirement, or change a field for all descendants.</value>
  </data>
  <data name="import-test-results" xml:space="preserve">
    <value>Import test results..</value>
  </data>
  <data name="run-folder" xml:space="preserve">
    <value>Run folder</value>
  </data>
  <data name="edit-folder" xml:space="preserve">
    <value>Edit folder</value>
  </data>
  <data name="delete-folder" xml:space="preserve">
    <value>Delete folder</value>
  </data>
  <data name="enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="testing" xml:space="preserve">
    <value>Testing</value>
  </data>
  <data name="reporting" xml:space="preserve">
    <value>Reporting</value>
  </data>
  <data name="issues" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="logged-action-commit" xml:space="preserve">
    <value>{0} submitted a commit {1}</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="logged-action-assignedto" xml:space="preserve">
    <value>{0} assigned this to {1}</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="test-results" xml:space="preserve">
    <value>Test results</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="issue" xml:space="preserve">
    <value>Issue</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="logged-action-component" xml:space="preserve">
    <value>{0} changed component to {1}</value>
  </data>
  <data name="logged-action-component-removed" xml:space="preserve">
    <value>{0} removed the component</value>
  </data>
  <data name="run-test-suite" xml:space="preserve">
    <value>Run test suite</value>
  </data>
  <data name="new-test-template" xml:space="preserve">
    <value>New test template</value>
  </data>
</root>