@using TestBucket.Components.Uploads.Services
@using TestBucket.Components.Uploads.Views
@using TestBucket.Contracts.Integrations
@using TestBucket.Domain.Teams.Models
@attribute [Authorize(Roles = "ADMIN")]
@inject ResourceViewFactory resourceViewFactory
@inject IStringLocalizer<SharedStrings> loc

<MudDialog DefaultFocus="DefaultFocus.FirstChild" Style="min-width: 70vw; min-height: 70vh">
    <TitleContent>@Resource?.Name</TitleContent>
    <DialogContent>

        <MudTabs Style="width: 100%">
            @foreach(var viewType in _viewTypes)
            {
                <MudTabPanel Text="@viewType.Name">
                    <DynamicComponent Type="@viewType.ComponentType" Parameters="_parameters" />
                </MudTabPanel>
            }

        </MudTabs>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Close" Color="Color.Primary">@loc["ok"]</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public FileResource? Resource { get; set; }

    private List<ViewType> _viewTypes = [];
    private readonly Dictionary<string, object> _parameters = new();


    protected override void OnInitialized()
    {
        if(Resource is not null)
        {
            _parameters["Resource"] = Resource;
            _viewTypes = resourceViewFactory.GetViewTypesForPreview(Resource).ToList();
        }

        base.OnInitialized();
    }

    private void Close()
    {
        MudDialog.Close();
    }
}
