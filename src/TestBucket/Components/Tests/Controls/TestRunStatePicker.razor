@using TestBucket.Contracts.Testing.Models
@using TestBucket.Domain.States
@inject ProjectService projectService

<Field>
    <FieldHeader>State</FieldHeader>

    <MudSelect Variant="Variant.Outlined" T="string" Value="@State" ValueChanged="OnStateChanged">
        @foreach(var state in _states)
        {
            <MudSelectItem Value="@state.Name">@state.Name</MudSelectItem>
        }
    </MudSelect>
</Field>

@code {
    [Parameter] public long? TestProjectId { get; set; }
    [Parameter] public string? State { get; set; }
    [Parameter] public EventCallback<string?> StateChanged { get; set; }

    private TestState[] _states = [];

    protected override async Task OnInitializedAsync()
    {
        _states = await projectService.GetStatesAsync(TestProjectId);
    }

    private async Task OnStateChanged(string? state)
    {
        await StateChanged.InvokeAsync(state);
    }
}
