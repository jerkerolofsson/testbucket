@using TestBucket.Contracts.Issues.Types
@using TestBucket.Contracts.Requirements
@using TestBucket.Contracts.Requirements.Types
@using TestBucket.Domain.Requirements.Models
@inject IStringLocalizer<SharedStrings> loc
@inject IStringLocalizer<IssueStrings> issueLoc

<EditForm Model="@_issue" OnValidSubmit="OnValidSubmit">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild" Style="min-width: 75vw">
        <TitleContent>
            @issueLoc["new-issue"]
        </TitleContent>
        <DialogContent>

            <MudStack Spacing="5">

                <MudStack Spacing="0">
                    <FieldHeader for="new-issue-title">@loc["title"]</FieldHeader>
                    <MudTextField id="new-issue-title" data-testid="title" Variant="Variant.Outlined" T="string" @bind-Value="@_issue.Title"></MudTextField>
                </MudStack>

                <div style="display: grid; gap: 4px; grid-template-columns: 1fr 1fr">
                    <MudStack Spacing="0">
                        <FieldHeader for="new-issue-type">@loc["type"]</FieldHeader>
                        <IssueTypeSelect TestProjectId="@TestProjectId" id="new-issue-type" data-testid="type" @bind-Type="@_type"></IssueTypeSelect>
                    </MudStack>

                    <MudStack Spacing="0">
                        <FieldHeader for="new-issue-provider">@loc["provider"]</FieldHeader>
                        <IssueSystemSelect TestProjectId="@TestProjectId" id="new-issue-provider" data-testid="provider" @bind-Provider="@_externalSystem"></IssueSystemSelect>
                    </MudStack>
                </div>

                <MudStack Spacing="0">
                    <FieldHeader for="new-issue-description">@loc["description"]</FieldHeader>
                    <MarkdownEditor id="new-issue-description" data-testid="description" @bind-Value="@_issue.Description" @bind-Preview="@_preview" />
                </MudStack>

            </MudStack>
        </DialogContent>

        <DialogActions>
            @if (_issue.Title?.Length > 0)
            {
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">@loc["ok"]</MudButton>
            }
            <MudButton OnClick="Close">@loc["cancel"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public long TestProjectId { get; set; }

    private ExternalSystem? _externalSystem = null; 

    private LocalIssue _issue = new() { Title = "" };
    private bool _preview = false;
    private IssueType _type = new IssueType { MappedType = MappedIssueType.Issue, Name = "Issue" };

    protected override void OnInitialized()
    {
    }

    private void Close()
    {
        MudDialog.Close();
    }

    private void OnValidSubmit()
    {
        if(_externalSystem is not null)
        {
            _issue.ExternalSystemName = _externalSystem.Name;
            _issue.ExternalSystemId = _externalSystem.Id;
        }

        _issue.IssueType = _type.Name;
        _issue.MappedType = _type.MappedType;
        MudDialog.Close(_issue);
    }
}

