@inherits LayoutComponentBase
@layout AppLayout
@using Humanizer
@using TestBucket.Contracts.Appearance.Models
@using TestBucket.Domain.Testing.TestRuns.Search
@inject TestCaseEditorController testCaseEditor
@inject NavigationManager navigationManager
@inject AppNavigationManager appNavigationManager
@inject UserPreferencesService preferencesController
@inject IStringLocalizer<SharedStrings> loc


<TenantRedirect />

<Splitter Style="height: 100%" Bordered="false" Dock="_dock" Dimension="20" EnableMargin="false" Color="Color.Tertiary">
    <StartContent>

        <MudStack Class="pa-2 tb-navmenu side" Style="width: 100%;">
            <MudText Typo="Typo.h1">@loc["reporting"]</MudText>

            <MudNavMenu>
                <MudNavLink OnClick="AllTime">All Time</MudNavLink>
                <MudNavLink OnClick="Today">Last 24 hours</MudNavLink>
                <MudNavLink OnClick="LastWeek">Last 7 days</MudNavLink>
            </MudNavMenu>
        </MudStack>

    </StartContent>

    <EndContent>
        <CascadingValue Value="@_query">
            @Body
        </CascadingValue>
    </EndContent>
</Splitter>

@code {
    [CascadingParameter] TestProject? Project { get; set; }
    [CascadingParameter] Team? Team { get; set; }

    private SearchTestCaseRunQuery _query = new();

    private Team? _team;
    private TestProject? _project;
    private Dock _dock = Dock.Left;

    protected override async Task OnInitializedAsync()
    {
        var userPreferences = await preferencesController.GetUserPreferencesAsync();
        _dock = userPreferences?.ExplorerDock ?? Dock.Left;
    }
    private void AllTime()
    {
        _query.CreatedFrom = null;
        _query.CreatedUntil = null;
    }
    private void LastWeek()
    {
        _query.CreatedFrom = DateTimeOffset.UtcNow.AddDays(-7);
        _query.CreatedUntil = DateTimeOffset.UtcNow;
    }
    private void Today()
    {
        _query.CreatedFrom = DateTimeOffset.UtcNow.AddDays(-1);
        _query.CreatedUntil = DateTimeOffset.UtcNow;
    }

    protected override void OnParametersSet()
    {
        if (_project != Project || _team != Team)
        {
            _project = Project;
            _team = Team;
        }
        _query.ProjectId = _project?.Id;
        _query.TeamId = _team?.Id;
    }

    private void OnTestRunClicked(TestRun run)
    {
        appNavigationManager.NavigateTo(run);
    }
}
