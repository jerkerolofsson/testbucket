@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject ProjectController projectController
@inject ISettingsProvider settingsProvider
@layout EmptyLayout
@page "/"
@using TestBucket.Components.Account
@using TestBucket.Domain.Settings
@using TestBucket.Identity

<PageTitle>Test Bucket</PageTitle>

<MudStack Style="width: 50vw">
    <MudProgressLinear Color="Color.Tertiary" Indeterminate="true"/>
</MudStack>

@code {

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var tenantId = authState.User.Claims.Where(x => x.Type == "tenant").Select(x => x.Value).FirstOrDefault();

        //await Task.Delay(12000);

        if(!string.IsNullOrEmpty(tenantId))
        {
            // Check if a project exists, if not, redirect to welcome experience
            var result = await projectController.SearchAsync(new SearchQuery() { Count = 1 });
            if (result.TotalCount == 0)
            {
                navigationManager.NavigateTo($"/{tenantId}/Welcome", true);
                return;
            }

            // Default start page
            navigationManager.NavigateTo($"/{tenantId}/Testing", true);
        }
        else
        {
            // Default tenant
            var settings = await settingsProvider.LoadGlobalSettingsAsync();
            navigationManager.NavigateTo($"/{settings.DefaultTenant}/Account/Login?returnUrl=/{settings.DefaultTenant}", true);
        }
    }
}