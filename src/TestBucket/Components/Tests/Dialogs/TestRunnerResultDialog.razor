@using System.Text.Json
@using TestBucket.Components.Features.Http.Controls
@using TestBucket.Components.Uploads.Services
@using TestBucket.Contracts.Automation.Api
@using TestBucket.Domain.Automation.Helpers
@using TestBucket.Formats
@using TestBucket.Formats.Dtos

@inject IStringLocalizer<SharedStrings> loc

<MudDialog DefaultFocus="DefaultFocus.FirstChild" Style="min-width: 75vw; min-height: 75vh">

    <TitleContent>
        @if (_testCaseRun?.Result is not null)
        {
            <ResultPill ReadOnly Result="@_testCaseRun.Result.Value" />
        }
    </TitleContent>

    <DialogContent>

        <MudTabs Style="height: 100%">

            @foreach (var httpResult in _httpResults)
            {
                <MudTabPanel Text="@httpResult.Request.RequestName">
                    <HttpTestResultView Result="@httpResult"/>
                </MudTabPanel>
            }
            <MudTabPanel Text="@loc["std-out"]">
               
                @if (TestRunnerResult is not null)
                {
                    @if (TestRunnerResult.StdOut is not null)
                    {
                        <pre>@TestRunnerResult?.StdOut</pre>
                    }
                }
            </MudTabPanel>

            <MudTabPanel Text="@loc["message"]">
                @if (_testCaseRun is not null)
                {
                    @if (_testCaseRun.Message is not null)
                    {
                        <MarkdownEditor ShowToolbar="false" Value="@_testCaseRun?.Message" Preview />
                    }
                }
            </MudTabPanel>

        </MudTabs>


    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Close" Color="Color.Primary">@loc["ok"]</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public TestRunnerResult? TestRunnerResult { get; set; }

    private TestCaseRunDto? _testCaseRun;
    private List<HttpMessageTestResult> _httpResults = [];

    protected override void OnInitialized()
    {
        _httpResults.Clear();

        _testCaseRun = TestRunnerResultParser.ParseSingleResult(TestRunnerResult?.Result, TestRunnerResult?.Format);
        if (TestRunnerResult is not null)
        {
            if (TestRunnerResult.ArtifactContent is not null)
            {
                foreach (var artifact in TestRunnerResult.ArtifactContent)
                {
                    if(artifact.Key.EndsWith(".http.result"))
                    {
                        try
                        {
                            var httpResult = JsonSerializer.Deserialize<HttpMessageTestResult>(Encoding.UTF8.GetString(artifact.Value));
                            if (httpResult is not null)
                            {
                                _httpResults.Add(httpResult);
                            }
                        }
                        catch { }
                    }
                }
            }
        }
    }

    private void Close()
    {
        MudDialog.Close();
    }
}

