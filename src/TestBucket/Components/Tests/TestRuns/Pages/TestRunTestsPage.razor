@attribute [Authorize()]
@page "/{TenantId}/Testing/TestRuns/{RunId:long}/Tests"
@using TestBucket.Components.Automation
@using TestBucket.Components.Tests.Layouts
@layout TestingLayout
@inject TestBrowser testBrowser
@inject NavigationManager navigationManager

<TestRunView TestRun="@_testRun" Query="@_query"/>

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }
    [Parameter] public long RunId { get; set; }

    private TestRun? _testRun = null;
    private SearchTestCaseRunQuery _query = new SearchTestCaseRunQuery();

    /// <summary>
    /// Load the test case when changed
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        _query = SearchTestCaseRunQuery.FromUrl(navigationManager.Uri);

        if (_testRun is null || _testRun.Id != RunId)
        {
            _testRun = await testBrowser.GetTestRunByIdAsync(RunId);
        }
    }
}
