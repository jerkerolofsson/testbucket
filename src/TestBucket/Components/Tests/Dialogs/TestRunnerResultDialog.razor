@using TestBucket.Components.Uploads.Services
@using TestBucket.Formats
@using TestBucket.Formats.Dtos

@inject IStringLocalizer<SharedStrings> loc

<MudDialog DefaultFocus="DefaultFocus.FirstChild" Style="min-width: 30vw">

    <TitleContent>
        @_testCaseRun?.Name
    </TitleContent>

    <DialogContent>

        @if (_testCaseRun?.Result is not null)
        {
            <ResultPill ReadOnly Result="@_testCaseRun.Result.Value" />
        }
        @if(TestRunnerResult is not null)
        {
            @if (TestRunnerResult.StdOut is not null)
            {
                <MudText Typo="Typo.h1">@loc["std-out"]</MudText>
                <pre>@TestRunnerResult?.StdOut</pre>
            }
        }
        @if (_testCaseRun is not null)
        {
            @if (_testCaseRun.Message is not null)
            {
                <MarkdownEditor ShowToolbar="false" Value="@_testCaseRun?.Message" Preview
                />
            }

        }

    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Close" Color="Color.Primary">@loc["ok"]</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public TestRunnerResult? TestRunnerResult { get; set; }

    private TestRunDto? _testRun;
    private TestCaseRunDto? _testCaseRun;

    protected override void OnInitialized()
    {
        if (TestRunnerResult?.Result is not null && TestRunnerResult?.Format is not null && TestRunnerResult.Format != TestResultFormat.UnknownFormat)
        {
            var serializer = TestResultSerializerFactory.Create(TestRunnerResult.Format);
            _testRun = serializer.Deserialize(TestRunnerResult.Result);
            if(_testRun.Suites.Count > 0 && _testRun.Suites[0].Tests.Count > 0)
            {
                _testCaseRun = _testRun.Suites[0].Tests[0];
            }

        }
    }

    private void Close()
    {
        MudDialog.Close();
    }
}

