<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appearance" xml:space="preserve">
    <value>外貌</value>
  </data>
  <data name="chart" xml:space="preserve">
    <value>图表</value>
  </data>
  <data name="chart-type-bar" xml:space="preserve">
    <value>酒吧</value>
  </data>
  <data name="chart-type-donut" xml:space="preserve">
    <value>油炸圈饼</value>
  </data>
  <data name="chart-type-heatmap" xml:space="preserve">
    <value>热图</value>
  </data>
  <data name="chart-type-line" xml:space="preserve">
    <value>线</value>
  </data>
  <data name="chart-type-pie" xml:space="preserve">
    <value>馅饼</value>
  </data>
  <data name="chart-type-text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="closed-issues" xml:space="preserve">
    <value>封闭的问题</value>
  </data>
  <data name="closed-issues-by-day" xml:space="preserve">
    <value>封闭的问题</value>
  </data>
  <data name="code-coverage" xml:space="preserve">
    <value>代码覆盖范围</value>
  </data>
  <data name="configure-data-visualization" xml:space="preserve">
    <value>配置数据可视化</value>
  </data>
  <data name="count-by-state" xml:space="preserve">
    <value>按州计数</value>
  </data>
  <data name="count-per-testcategory" xml:space="preserve">
    <value>测试 /类别</value>
  </data>
  <data name="created-issues" xml:space="preserve">
    <value>创建的问题</value>
  </data>
  <data name="created-issues-by-day" xml:space="preserve">
    <value>创建的问题</value>
  </data>
  <data name="dark-mode" xml:space="preserve">
    <value>黑暗模式</value>
  </data>
  <data name="data-mode" xml:space="preserve">
    <value>数据模式</value>
  </data>
  <data name="data-source" xml:space="preserve">
    <value>数据源</value>
  </data>
  <data name="date-format" xml:space="preserve">
    <value />
  </data>
  <data name="default-chart-type" xml:space="preserve">
    <value>图表类型</value>
  </data>
  <data name="filter" xml:space="preserve">
    <value>筛选</value>
  </data>
  <data name="grid-lines" xml:space="preserve">
    <value>网格线</value>
  </data>
  <data name="height" xml:space="preserve">
    <value>高度</value>
    <comment>Number of rows for a dashboard tile within grid</comment>
  </data>
  <data name="issue-inflow-outflow" xml:space="preserve">
    <value>发出流入和流出</value>
  </data>
  <data name="issues-by-state" xml:space="preserve">
    <value>问题 /状态</value>
  </data>
  <data name="label" xml:space="preserve">
    <value>标签</value>
  </data>
  <data name="label-or-series" xml:space="preserve">
    <value>值得显示的价值</value>
    <comment>The label or series name to show for text visualization in dashboard</comment>
  </data>
  <data name="light-mode" xml:space="preserve">
    <value>光模式</value>
  </data>
  <data name="palette" xml:space="preserve">
    <value>调色板</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>结果</value>
  </data>
  <data name="show-legend" xml:space="preserve">
    <value>展示传奇</value>
  </data>
  <data name="show-table" xml:space="preserve">
    <value>显示表</value>
  </data>
  <data name="size" xml:space="preserve">
    <value>尺寸</value>
    <comment>Size of dashboard tile in grid</comment>
  </data>
  <data name="test-results" xml:space="preserve">
    <value>测试结果</value>
  </data>
  <data name="test-results-by-component" xml:space="preserve">
    <value>通过组件测试结果</value>
  </data>
  <data name="test-results-by-user" xml:space="preserve">
    <value>用户测试结果</value>
  </data>
  <data name="text-format" xml:space="preserve">
    <value>文本格式</value>
  </data>
  <data name="time-alltime" xml:space="preserve">
    <value>一直以来</value>
  </data>
  <data name="time-one-month" xml:space="preserve">
    <value>一个月</value>
  </data>
  <data name="time-one-week" xml:space="preserve">
    <value>一周</value>
  </data>
  <data name="time-one-year" xml:space="preserve">
    <value>一年</value>
  </data>
  <data name="time-today" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="value" xml:space="preserve">
    <value>价值</value>
  </data>
  <data name="width" xml:space="preserve">
    <value>宽度</value>
    <comment>Number of columns in grid for a dashboard tile</comment>
  </data>
</root>