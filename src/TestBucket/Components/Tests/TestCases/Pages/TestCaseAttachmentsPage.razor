@attribute [Authorize()]
@page "/{TenantId}/Testing/TestCases/{TestCaseId:long}/Attachments"
@using TestBucket.Components.Tests.Layouts
@using TestBucket.Domain.Requirements.Models
@layout TestCaseDetailsLayout
@inject TestBrowser testBrowser
@inject TestCaseEditorController testCaseEditorController
@inject NavigationManager navigationManager
@inject AppNavigationManager appNavigationManager
@inject IStringLocalizer<SharedStrings> loc

@if (Test is not null)
{
    <CascadingValue Value="@Test">
        <MudStack Style="width:100%" Class="pa-2">
            <MudText Typo="Typo.h1">@loc["attachments"]</MudText>
            <AttachmentGrid AllowUpload="true" TestCaseId="@Test.Id" Style="width: 100%" />
        </MudStack>
    </CascadingValue>
}

@code {
    [Parameter] public long TestCaseId { get; set; }
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }
    [CascadingParameter] public TestCase? Test { get; set; }

    private List<BreadcrumbItem> _nav = new();
    protected override void OnInitialized()
    {
        _nav = [new BreadcrumbItem(loc["attachments"], navigationManager.Uri)];
    }

    //private TestCase? _testCase = null;

    private async Task SaveAsync(TestCase test)
    {
        await testCaseEditorController.SaveTestCaseAsync(test);
    }

    private async Task OnTestModified(TestCase test)
    {
        await testCaseEditorController.SaveTestCaseAsync(test);
    }
}
