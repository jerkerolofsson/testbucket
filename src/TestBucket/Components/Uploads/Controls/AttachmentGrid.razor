@using Humanizer
@using TestBucket.Components.Uploads.Services
@inject AttachmentsService attachmentsService
@inject IDialogService dialogService
@inject IStringLocalizer<SharedStrings> loc

<MudStack Class="@Class" Style="@Style">

    @if (_attachments.Count > 0)
    {
        <MudPaper Style="height: 100%; width: 100%" Outlined="true">
            <MudToolBar Gutters="false" Style="height: auto; padding: 4px" Class="d-flex justify-end gap-4">
                <MudIconButton Size="Size.Small" Color="@GridColor" Icon="@Icons.Material.Filled.ViewModule" OnClick="() => _isGrid = true"/>
                <MudIconButton Size="Size.Small" Color="@ListColor" Icon="@Icons.Material.Filled.ViewList" OnClick="() => _isGrid = false" />
            </MudToolBar>
            @if (_isGrid)
            {
                <MudStack Class="tb-attachment-grid-icons pa-2" Spacing="3" Row Wrap="Wrap.Wrap">
                    @foreach (var attachment in _attachments)
                    {
                        <ResourceThumbnail ResourceClicked="OnAttachmentClickedAsync" Resource="@attachment" />
                    }
                </MudStack>
            }
            else
            {
                <MudDataGrid Items="_attachments"
                             Class="tb-attachment-grid-table pa-2"
                             Dense
                             Hover
                             RowClass="tb-datarow cursor-pointer"
                             RowClick="(e) => OnAttachmentClickedAsync(e.Item)"
                             T="FileResource"
                SortMode="SortMode.Single">

                    <ColGroup>
                        <col style="width: 40%" />
                        <col style="width: 20%" />
                        <col style="width: 15%" />
                        <col style="width: 15%" />
                        <col style="width: 10%" />
                    </ColGroup>

                    <Columns>

                        <TemplateColumn Title="@loc["file-name"]">
                            <CellTemplate>
                                <MudStack Row Spacing="0" AlignItems="AlignItems.Center">
                                    <FileTypeIcon ContentType="@context.Item.ContentType" Size="Size.Large" Style="width: 32x; height: 32px" />
                                    <div>@context.Item.Name</div>
                                </MudStack>
                            </CellTemplate>
                        </TemplateColumn>

                        <PropertyColumn Property="x => x.ContentType" Title="@loc["file-type"]" />
                        <TemplateColumn Title="@loc["created"]">
                            <CellTemplate>
                                @if (context.Item.Created is not null)
                                { 
                                    @context.Item.Created.Value.Humanize()
                                }
                            </CellTemplate>
                        </TemplateColumn>

                        <TemplateColumn Title="@loc["file-size"]">
                            <CellTemplate>
                                @context.Item.Length.Bytes().Humanize()
                            </CellTemplate>
                        </TemplateColumn>

                        <TemplateColumn>
                            <CellTemplate>
                                <MudIconButton Icon="@Icons.Material.Filled.Clear" Color="Color.Error" OnClick="async()=>await DeleteAttachmentAsync(context.Item)"/>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>
                </MudDataGrid>
            }
        </MudPaper>
    }
    @if (AllowUpload)
    {
        <UploadFile
            Style="width: 100%; height: 100%"
            MaxFileSize="50_000_000"
            FileUploaded="OnFileUploadedAsync"
            Label="Upload attachment"
            TestProjectId="@TestProjectId"
            TestSuiteFolderId="@TestSuiteFolderId"
            TestSuiteId="@TestSuiteId"
            TestCaseRunId="@TestCaseRunId"
            TestRunId="@TestRunId"
            RequirementId="@RequirementId"
            RequirementSpecificationId="@RequirementSpecificationId"
            TestCaseId="@TestCaseId">
        </UploadFile>
    }

</MudStack>
