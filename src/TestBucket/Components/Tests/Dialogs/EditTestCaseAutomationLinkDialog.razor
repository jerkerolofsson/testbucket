@attribute [Authorize(Roles = "ADMIN")]
@inject TestCaseEditorService testCaseEditorService

@if (TestCase is not null)
{
    <EditForm Model="@TestCase" OnValidSubmit="async () => await OnValidSubmitAsync()">
        <MudDialog DefaultFocus="DefaultFocus.FirstChild">
            <DialogContent>
                <MudStack Spacing="1">

                    <h1>Link by Test ID</h1>
                    <Field>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@TestCase.ExternalId"></MudTextField>
                    </Field>

                    <MudText>--- or ---</MudText>

                    <h1>Link by Test Automation Attributes</h1>
                    <Field>
                        <FieldHeader>Assembly name</FieldHeader>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@TestCase.AutomationAssembly"></MudTextField>
                    </Field>
                    <Field>
                        <FieldHeader>Module name</FieldHeader>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@TestCase.Module"></MudTextField>
                    </Field>
                    <Field>
                        <FieldHeader>Class name</FieldHeader>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@TestCase.ClassName"></MudTextField>
                    </Field>
                    <Field>
                        <FieldHeader>Method</FieldHeader>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@TestCase.Method"></MudTextField>
                    </Field>

                </MudStack>
            </DialogContent>

            <DialogActions>
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">OK</MudButton>
                <MudButton OnClick="Close">Cancel</MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
}

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public TestCase? TestCase { get; set; }


    private void Close()
    {
        MudDialog.Close();
    }

    private async Task OnValidSubmitAsync()
    {
        if(TestCase is null)
        {
            MudDialog.Close();
            return;
        }

        if(string.IsNullOrWhiteSpace(TestCase.Module))
        {
            TestCase.Module = null;
        }
        if (string.IsNullOrWhiteSpace(TestCase.AutomationAssembly))
        {
            TestCase.AutomationAssembly = null;
        }
        if (string.IsNullOrWhiteSpace(TestCase.Method))
        {
            TestCase.Method = null;
        }
        if (string.IsNullOrWhiteSpace(TestCase.ClassName))
        {
            TestCase.ClassName = null;
        }

        await testCaseEditorService.SaveTestCaseAsync(TestCase);
        MudDialog.Close(TestCase);
    }
}

