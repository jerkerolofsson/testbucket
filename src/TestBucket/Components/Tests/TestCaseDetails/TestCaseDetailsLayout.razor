@inherits LayoutComponentBase
@layout AppLayout
@using Humanizer
@using TestBucket.Components.Layout
@using TestBucket.Components.Shared.Splitter
@using TestBucket.Components.Tests.Layouts
@using TestBucket.Domain.Requirements.Models
@using TestBucket.Domain.Teams.Models
@inject TestBrowser browser
@inject TestCaseEditorController testCaseEditor
@inject NavigationManager navigationManager
@inject AppNavigationManager appNavigationManager
@inject IStringLocalizer<SharedStrings> loc

<TenantRedirect />

<Splitter Style="height: 100%" Bordered="false" Dimension="25" EnableMargin="false" Color="Color.Tertiary">
    <StartContent>

        <div class="pa-5" style="width: 100%">

            <MudText Typo="Typo.h1">@_testCase.Name</MudText>

            <MudNavMenu>

                <MudNavLink Icon="@Icons.Material.Filled.Abc" Href="@appNavigationManager.GetTestCaseVariablesUrl()">@loc["variables"]</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Tag" Href="@appNavigationManager.GetTestCaseFieldsUrl()">@loc["fields"]</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.AttachFile" Href="@appNavigationManager.GetTestCaseAttachmentsUrl()">@loc["attachments"]</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.FactCheck" Href="@appNavigationManager.GetTestCaseRequimentsUrl()">@loc["requirements"]</MudNavLink>

                <AuthorizeView Roles="ADMIN">

                </AuthorizeView>

                <AuthorizeView Roles="SUPERADMIN">
                </AuthorizeView>
            </MudNavMenu>
        </div>

    </StartContent>

    <EndContent>
        <CascadingValue Value="@_testCase">
            <MudStack Style="width: 100%; overflow: auto; ">
                @Body
            </MudStack>>
        </CascadingValue>
    </EndContent>
</Splitter>

@code {
    [CascadingParameter] TestProject? Project { get; set; }
    [CascadingParameter] Team? Team { get; set; }

    private TestCase? _testCase;

    private Team? _team;
    private TestProject? _project;
    private TestTreeView? _testTreeView;

    protected override async Task OnParametersSetAsync()
    {
        if (_project != Project || _team != Team)
        {
            _project = Project;
            _team = Team;
        }
        _testCase = appNavigationManager.State.SelectedTestCase;
        var testCaseId = appNavigationManager.GetTestCaseIdFromCurrentUri();
        if (testCaseId != _testCase?.Id && testCaseId is not null)
        {
            _testCase = await browser.GetTestCaseByIdAsync(testCaseId.Value);
        }
    }
}
