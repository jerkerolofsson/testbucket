@using Humanizer
@using TestBucket.Components.Uploads.Services
@using TestBucket.Domain.Files
@inject AttachmentsService attachmentsService
@inject AppNavigationManager appNavigationManager
@inject IDialogService dialogService
@inject IStringLocalizer<SharedStrings> loc
@inject IFileResourceManager fileResourceManager 
@implements IDisposable
@implements IFileResourceObserver

<MudStack Class="@Class" Style="@Style" Spacing="1">

    @if (_attachments.Count > 0)
    {
        <MudPaper Style="height: 100%; width: 100%" Outlined="true">
            <MudToolBar Gutters="false" Style="height: auto; padding: 4px" Class="d-flex">
                <MudSpacer/>
                <MudChipSet Size="Size.Small" T="bool" SelectedValue="_isGrid" SelectionMode="SelectionMode.SingleSelection" SelectedValueChanged="SetGrid" CheckMark Variant="Variant.Text" Color="Color.Info">
                    <MudChip Icon="@Icons.Material.Filled.ViewModule" Value="@(true)" Text="@loc["grid"]" />
                    <MudChip Icon="@Icons.Material.Filled.ViewList" Value="@(false)" Text="@loc["list"]" />
                </MudChipSet>
            </MudToolBar>
            @if (_isGrid)
            {
                <MudStack Class="tb-attachment-grid-icons pa-2" Spacing="3" Row Wrap="Wrap.Wrap">
                    @foreach (var attachment in _attachments)
                    {
						<MudMenu ActivationEvent="@MouseEvent.RightClick" Dense="true" OpenChanged="() => OnMenuOpened(attachment)">
							<ActivatorContent>
								<ResourceThumbnail ResourceClicked="OnAttachmentClickedAsync" Resource="@attachment" />
							</ActivatorContent>
							<ChildContent>
								<CommandMenuItems TypeNames="file" />
							</ChildContent>
						</MudMenu>
                    }
                </MudStack>
            }
            else
            {
                <MudDataGrid Items="_attachments"
                             Class="tb-attachment-grid-table pa-2"
                             Dense
                             Hover
                             RowClass="tb-datarow cursor-pointer"
                             RowClick="(e) => OnAttachmentClickedAsync(e.Item)"
                             T="FileResource"
                SortMode="SortMode.Single">

                    <ColGroup>
                        <col style="width: 40%" />
                        <col style="width: 20%" />
                        <col style="width: 15%" />
                        <col style="width: 15%" />
                        <col style="width: 10%" />
                    </ColGroup>

                    <Columns>

                        <TemplateColumn Title="@loc["file-name"]">
                            <CellTemplate>
								<MudMenu ActivationEvent="@MouseEvent.RightClick" Dense="true" OpenChanged="() => OnMenuOpened(context.Item)">
									<ActivatorContent>
										<MudStack Row Spacing="0" AlignItems="AlignItems.Center">
											<FileTypeIcon ContentType="@context.Item.ContentType" Size="Size.Large" Style="width: 32x; height: 32px" />
											<div>@context.Item.Name</div>
										</MudStack>
									</ActivatorContent>
									<ChildContent>
										<CommandMenuItems TypeNames="file" />
									</ChildContent>
								</MudMenu>
                            </CellTemplate>
                        </TemplateColumn>

                        <PropertyColumn Property="x => x.ContentType" Title="@loc["file-type"]" />
                        <TemplateColumn Title="@loc["created"]">
                            <CellTemplate>
                                @if (context.Item.Created is not null)
                                { 
                                    @context.Item.Created.Value.Humanize()
                                }
                            </CellTemplate>
                        </TemplateColumn>

                        <TemplateColumn Title="@loc["file-size"]">
                            <CellTemplate>
                                @context.Item.Length.Bytes().Humanize()
                            </CellTemplate>
                        </TemplateColumn>

                        <TemplateColumn>
                            <CellTemplate>

								<MudMenu Icon="@Icons.Material.Filled.MoreHoriz" Dense="true" OpenChanged="() => OnMenuOpened(context.Item)">
									<CommandMenuItems TypeNames="file" />
								</MudMenu>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>
                </MudDataGrid>
            }
        </MudPaper>
    }
    @if (AllowUpload)
    {
        <UploadFile
            Style="width: 100%; height: 100%"
            MaxFileSize="50_000_000"
            FileUploaded="OnFileUploadedAsync"
            Label="Upload attachment"
            TestProjectId="@TestProjectId"
            TestSuiteFolderId="@TestSuiteFolderId"
            TestSuiteId="@TestSuiteId"
            TestCaseRunId="@TestCaseRunId"
            TestRunId="@TestRunId"
            RequirementId="@RequirementId"
            RequirementSpecificationId="@RequirementSpecificationId"
            TestCaseId="@TestCaseId">
        </UploadFile>
    }

</MudStack>
