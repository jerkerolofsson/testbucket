@page "/{tenantId}/Settings/ManageProjects"
@using System.Diagnostics.CodeAnalysis
@using System.Diagnostics
@using TestBucket.Components.Shared.Profile
@layout SettingsLayout
@inject ProjectController controller
@inject IDialogService dialogService
@inject AppNavigationManager appNav
@inject IStringLocalizer<SharedStrings> loc

<MudStack Class="container-settings-page">

    <MudBreadcrumbs Items="@_nav"></MudBreadcrumbs>

    <MudDataGrid ServerData="LoadGridData"
    Dense
    Hover
    RowStyle="pointer-cursor tb-datarow"
    T="TestProject"
    @ref="_dataGrid"
    RowClick="x => OnRowClicked(x.Item)"
    SortMode="SortMode.Single">

        <ToolBarContent>
            <MudStack Row AlignItems="AlignItems.Center" Style="width: 100%" Class="pt-5">
                <MudIcon Icon="@Icons.Material.Filled.ViewTimeline" Size="Size.Large" Color="Color.Secondary" />
                <MudText Typo="Typo.h2">@loc["projects"]</MudText>
                <MudSpacer />

                <PermissionView Level="Domain.Identity.Permissions.PermissionLevel.Write" Entity="PermissionEntityType.Project">
                    <Authorized>
                        <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="AddProjectAsync"></MudIconButton>
                    </Authorized>
                </PermissionView>
            </MudStack>
        </ToolBarContent>

        <Columns>

            <TemplateColumn Title="@loc["name"]" SortBy="x => x.Name" Sortable="true">
                <CellTemplate>
                    <MudStack Row AlignItems="AlignItems.Center">
                        <GenericAvatar Text="@context.Item.ShortName" ImageUri="@context.Item.IconUrl"/>
                        <MudText>@context.Item.Name</MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>

            <PropertyColumn Property="x => x.NumberOfTestSuites" />
            <PropertyColumn Property="x => x.NumberOfTestCases" />
        </Columns>

        <PagerContent>
            <MudDataGridPager T="TestProject" />
        </PagerContent>
    </MudDataGrid>
</MudStack>

@code {
    [Parameter] public string? TenantId { get; set; }
    [CascadingParameter] public Team? Team { get; set; }

    private MudDataGrid<TestProject>? _dataGrid;

    private List<BreadcrumbItem> _nav = [];

    protected override void OnInitialized()
    {
        SetupBreadcrumbs();
    }

    private void SetupBreadcrumbs()
    {
        _nav.Clear();
        _nav.Add(new BreadcrumbItem(loc["settings"], appNav.GetSettingsUrl()));
        _nav.Add(new BreadcrumbItem(loc["projects"], appNav.GetManageProjectsUrl()));
    }

    private void OnRowClicked(TestProject project)
    {
        appNav.NavigateTo(project, false);
    }

    private async Task AddProjectAsync()
    {
        Debug.Assert(Team is not null);
        if(Team is null)
        {
            return;
        }

        await controller.AddProjectAsync(Team);
        _dataGrid?.ReloadServerData();
    }

    private async Task<GridData<TestProject>> LoadGridData(GridState<TestProject> state)
    {
        var result = await controller.SearchAsync(new Contracts.SearchQuery
            {
                Offset = state.Page * state.PageSize,
                Count = state.PageSize
            });

        GridData<TestProject> data = new()
            {
                Items = result.Items,
                TotalItems = (int)result.TotalCount
            };

        return data;
    }
}
