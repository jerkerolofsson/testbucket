@using TestBucket.Domain.Requirements.Models
@inject NavigationManager navigationManager
@inject TestBrowser testBrowser
@inject AppNavigationManager appNavigationManager

<MudStack Row AlignItems="AlignItems.Center">
    <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.ArrowUpward" OnClick="NavUp"/>
    <MudBreadcrumbs Items="@_nav"/>
</MudStack>

@code {
    [Parameter] public TestCase? Test { get; set; }
    [Parameter] public long? FolderId { get; set; }

    private List<BreadcrumbItem> _nav = [];
    private string? _navUpUrl;

    private void NavUp()
    {
        if (_navUpUrl is not null)
        {
            navigationManager.NavigateTo(_navUpUrl);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        List<BreadcrumbItem> nav = new();
        if (Test?.PathIds is not null)
        {
            var tenantId = TenantResolver.ResolveTenantIdFromUrl(navigationManager.Uri);
            var testSuiteId = Test.TestSuiteId;

            var testSuite = await testBrowser.GetTestSuiteByIdAsync(Test.TestSuiteId);
            if(testSuite is not null)
            {
                var testSuiteUrl = appNavigationManager.GetUrl(testSuite);
                nav.Add(new BreadcrumbItem(testSuite.Name, testSuiteUrl));
                _navUpUrl = testSuiteUrl;
            }

            var pathItems = Test.Path.Split('/');
            var len = Math.Min(pathItems.Length, Test.PathIds.Length);
            for (int i = 0; i < Test.PathIds.Length; i++)
            {
                var url = appNavigationManager.GetFolderUrl(testSuiteId, Test.PathIds[i]);
                nav.Add(new BreadcrumbItem(pathItems[i], url));

                // Parent dir is the last one
                _navUpUrl = url;
            }
            nav.Add(new BreadcrumbItem(Test.Name, appNavigationManager.GetUrl(Test)));
        }
        else if (FolderId is not null)
        {
            var folder = await testBrowser.GetTestSuiteFolderByIdAsync(FolderId.Value);
            if(folder?.PathIds is not null && folder.Path is not null)
            {
                var tenantId = TenantResolver.ResolveTenantIdFromUrl(navigationManager.Uri);
                var testSuiteId = folder.TestSuiteId;

                var testSuite = await testBrowser.GetTestSuiteByIdAsync(folder.TestSuiteId);
                if (testSuite is not null)
                {
                    var testSuiteUrl = appNavigationManager.GetUrl(testSuite);
                    nav.Add(new BreadcrumbItem(testSuite.Name, testSuiteUrl));
                    _navUpUrl = testSuiteUrl;
                }

                var pathItems = folder.Path.Split('/');
                var len = Math.Min(pathItems.Length, folder.PathIds.Length);
                for (int i = 0; i < folder.PathIds.Length; i++)
                {
                    var url = appNavigationManager.GetFolderUrl(folder.TestSuiteId, folder.PathIds[i]);
                    nav.Add(new BreadcrumbItem(pathItems[i], url));

                    // Parent dir is the last one
                    _navUpUrl = url;
                }

                nav.Add(new BreadcrumbItem(folder.Name, appNavigationManager.GetUrl(folder)));
            }
        }
        _nav = nav;
        this.StateHasChanged();
    }
}
