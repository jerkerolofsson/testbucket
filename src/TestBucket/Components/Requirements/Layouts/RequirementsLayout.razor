@using Humanizer
@using TestBucket.Components.Layout
@using TestBucket.Components.Requirements.Controls
@using TestBucket.Components.Shared.Splitter
@using TestBucket.Domain.Requirements.Models
@using TestBucket.Domain.Teams.Models
@layout AppLayout
@inherits LayoutComponentBase
@inject AppNavigationManager appNav
@inject AppNavigationManager appNavigationManager

<TenantRedirect />

<Splitter Class="container-fill" Bordered="false" Dimension="25" EnableMargin="false" Color="Color.Tertiary">
    <StartContent>
        <RequirementTreeView 
            @ref="_treeView"
            Project="@Project"
            Team="@Team"
            OnSpecificationClicked="OnSpecificationClicked"
                             OnFolderClicked="OnFolderClicked"
            OnRequirementClicked="OnRequirementClicked" />
    </StartContent>

    <EndContent>
        @Body
    </EndContent>
</Splitter>

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] TestProject? Project { get; set; }
    [CascadingParameter] Team? Team { get; set; }

    private Team? _team;
    private TestProject? _project;
    private RequirementTreeView? _treeView;

    private void OnSpecificationClicked(RequirementSpecification specification)
    {
        appNav.NavigateTo(specification);
    }
    private void OnRequirementClicked(Requirement requirement)
    {
        appNav.NavigateTo(requirement);
    }
    private void OnFolderClicked(RequirementSpecificationFolder folder)
    {
        appNav.NavigateTo(folder);
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        appNavigationManager.State.RequirementTreeView = _treeView;
        return base.OnAfterRenderAsync(firstRender);
    }

    protected override void OnParametersSet()
    {
        if (_project != Project || _team != Team)
        {
            _project = Project;
            _team = Team;
        }
    }
}
