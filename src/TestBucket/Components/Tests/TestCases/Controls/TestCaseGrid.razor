@using TestBucket.Domain
@using TestBucket.Domain.Testing.TestCases
@inject TestBrowser testBrowser
@inject IDialogService dialogService
@inject ITestCaseManager testCaseManager
@inject TestSuiteController testSuiteServer
@inject TestCaseEditorController testCaseEditor
@inject FieldController fieldController
@inject NavigationManager navigationManager
@inject IStringLocalizer<SharedStrings> loc
@implements IDisposable
@implements ITestCaseObserver

<MudDataGrid ServerData="LoadGridData"
             Class="tb-test-case-grid"
             Dense
             RowClassFunc="RowClassFunc"
             T="TestSuiteItem"
             RowClick="(e) => OnItemClicked(e.Item)"
             @ref="_dataGrid"
             SortMode="@(SortMode)">

    <ToolBarContent>
        <MudStack Row="true" AlignItems="AlignItems.Center" Style="width: 100%">

            <MudTextField Value="@_searchPhrase" T="string" ValueChanged="OnSearch"
                          Class="mt-2 default-search"
                          Clearable="true"
                          Variant="Variant.Outlined"
                          IconSize="Size.Small"
                          Adornment="Adornment.Start"
                          Placeholder="@loc["search-tests"]"
                          AdornmentIcon="@Icons.Material.Filled.Search" />
            <SemanticSearchToggle @bind-Enabled="@_semanticSearch" EnabledLabel="@loc["semantic-search"]" DisabledLabel="@loc["normal-search"]" />

            <MudSpacer />
            <MudIconButton Icon="@TbIcons.Filled.Globe" OnClick="ShowBrowserFilterAsync"></MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.FilterList" OnClick="ShowFilterAsync"></MudIconButton>

            @if(_hasCustomFilter)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Clear" OnClick="ResetFilter"></MudIconButton>
            }

            @if (TestSuiteId is not null || Folder is not null)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="CreateNewTestCaseAsync"></MudIconButton>
            }

        </MudStack>
    </ToolBarContent>

    <ColGroup>
        <col style="width: 70%" />
        <col style="width: 15%" />
        <col style="width: 15%"/>
    </ColGroup>

    <Columns>
        <TemplateColumn Title="@loc["name"]" SortBy="@(_ => nameof(TestSuiteItem.Name))" Sortable="true">
            <CellTemplate>
                @if (context.Item.TestCase is not null)
                {
                    <Draggable T="TestEntity" Data="@context.Item.TestCase">
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudIcon Icon="@TestIcons.GetIcon(context.Item.TestCase)" />
                            @context.Item.TestCase.Name
                        </MudStack>
                    </Draggable>
                }
                @if (context.Item.Folder is not null)
                {
                    <Draggable T="TestEntity" Data="@context.Item.Folder">
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudIcon Icon="@TestIcons.GetIcon(context.Item.Folder)" />
                            @context.Item.Folder.Name
                        </MudStack>

                    </Draggable>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="@loc["state"]" SortBy="@(_ => nameof(TestSuiteItem.State))" Sortable="true">
            <CellTemplate>
                @if (context.Item.TestCase is not null)
                {
                    @context.Item.TestCase.State
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="@loc["modified"]" SortBy="@(_ => nameof(TestSuiteItem.Modified))" Sortable="true">
            <CellTemplate>
                @if (context.Item.TestCase is not null)
                {
                    @context.Item.TestCase.Modified.Humanize()
                }
                @if (context.Item.Folder is not null)
                {
                    @context.Item.Folder.Modified.Humanize()
                }
            </CellTemplate>
        </TemplateColumn>


    </Columns>

    <PagerContent>
        <MudDataGridPager T="TestSuiteItem" />
    </PagerContent>
</MudDataGrid>
