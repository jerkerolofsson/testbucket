@attribute [Authorize(Roles = "SUPERADMIN")]
@layout SettingsLayout
@page "/{tenantId}/Settings/Tenants"
@inject TenantService tenantService
@inject IDialogService dialogService
@inject NavigationManager navigationManager
@inject IStringLocalizer<SharedStrings> loc

<MudStack Class="container-settings-page">

    <MudText Class="mb-3" Typo="Typo.h1">@loc["tenants"]</MudText>

    <MudDataGrid ServerData="LoadGridData"
        Dense="true"
        Hover="true"
        T="Tenant"
        RowClick="(e) => OnRowClicked(e.Item)"
        @ref="_dataGrid"
        SortMode="SortMode.None">

        <ToolBarContent>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="AddTenantAsync"></MudIconButton>

            </MudStack>
        </ToolBarContent>

        <Columns>
            <PropertyColumn Property="x => x.Id" Title="@loc["id"]" />
            <PropertyColumn Property="x => x.Name" Title="@loc["name"]"/>
        </Columns>

        <PagerContent>
            <MudDataGridPager T="Tenant" />
        </PagerContent>
    </MudDataGrid>
</MudStack>

@code {
    [Parameter] public string? TenantId { get; set; }

    private MudDataGrid<Tenant>? _dataGrid;

    private void OnRowClicked(Tenant tenant)
    {
        navigationManager.NavigateTo($"/{TenantId}/tenants/manage/{tenant.Id}");
    }

    private async Task AddTenantAsync()
    {
        var dialog = await dialogService.ShowAsync<AddTenantDialog>();
        var result =await dialog.Result;
        _dataGrid?.ReloadServerData();
    }

    private async Task<GridData<Tenant>> LoadGridData(GridState<Tenant> state)
    {
        var result = await tenantService.SearchAsync(new Contracts.SearchQuery
            {
                Offset = state.Page * state.PageSize,
                Count = state.PageSize
            });

        GridData<Tenant> data = new()
            {
                Items = result.Items,
                TotalItems = (int)result.TotalCount
            };

        return data;
    }
}
