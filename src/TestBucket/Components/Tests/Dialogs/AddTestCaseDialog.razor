@using TestBucket.Domain.Requirements.Models
@attribute [Authorize(Roles = "ADMIN")]
@inject TestCaseEditorController testCaseEditorService

<EditForm Model="@_testCase" OnValidSubmit="async () => await OnValidSubmitAsync()">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild">
        <DialogContent>
            <MudStack Spacing="1">
                @if (_testCase is not null)
                {
                    <Field>
                        <FieldHeader>Name</FieldHeader>
                        <MudTextField AutoFocus="true" Variant="Variant.Outlined" T="string" @bind-Value="@_testCase.Name"></MudTextField>
                    </Field>
                }
                @if (_errorMessage is not null)
                {
                    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
                }

            </MudStack>
        </DialogContent>

        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">OK</MudButton>
            <MudButton OnClick="Close">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    private string? _errorMessage;

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public TestSuiteFolder? Folder { get; set; }
    [Parameter] public long? TestSuiteId { get; set; }

    private TestCase _testCase = new() { Name = "", TenantId = "" };

    protected override void OnParametersSet()
    {
        if(Folder is not null)
        {
            _testCase.TestSuiteFolderId = Folder.Id;
            _testCase.TestSuiteId = Folder.TestSuiteId;
        }
        if(TestSuiteId is not null)
        {
            _testCase.TestSuiteId = TestSuiteId.Value;
        }
        base.OnParametersSet();
    }

    private void Close()
    {
        MudDialog.Close();
    }

    private async Task OnValidSubmitAsync()
    {
        if (string.IsNullOrWhiteSpace(_testCase.Name))
        {
            _errorMessage = "Invalid name";
            return;
        }

        await testCaseEditorService.AddTestCaseAsync(_testCase);
        MudDialog.Close(_testCase);
    }
}

