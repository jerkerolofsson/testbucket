@using Humanizer
@using TestBucket.Components.Shared
@using TestBucket.Domain.Requirements.Models
@using TestBucket.Traits.Core
@using TestBucket.Components.Tests.Models
@inject TestBrowser testBrowser
@inject IDialogService dialogService
@inject ITestCaseManager testCaseManager
@inject TestSuiteService testSuiteServer
@inject TestCaseEditorController testCaseEditor
@inject FieldController fieldController
@inject IStringLocalizer<SharedStrings> loc
@implements IDisposable
@implements ITestCaseObserver

<MudDataGrid ServerData="LoadGridData"
             Style="width: 100%"
             Dense="true"
             Hover="true"
             T="TestSuiteItem"
             RowClick="(e) => OnItemClicked(e.Item)"
             @ref="_dataGrid"
             SortMode="SortMode.None">

    <ToolBarContent>
        <MudStack Row="true" AlignItems="AlignItems.Center" Style="width: 100%">

            <MudTextField Value="@_query.Text" T="string" ValueChanged="OnSearch"
                          Style="min-width: 15vw"
                          Clearable="true"
                          Variant="Variant.Outlined"
                          IconSize="Size.Small"
                          Adornment="Adornment.Start"
                          Placeholder="Search Tests"
                          AdornmentIcon="@Icons.Material.Filled.Search" />

            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.FilterList" OnClick="async () => await ShowFilterAsync()"></MudIconButton>
            @if (TestSuiteId is not null || Folder is not null)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="CreateNewTestCaseAsync"></MudIconButton>
            }

        </MudStack>
    </ToolBarContent>

    <Columns>
        <TemplateColumn Title="@loc["name"]">
            <CellTemplate>
                @if (context.Item.TestCase is not null)
                {
                    <Draggable T="TestEntity" Data="@context.Item.TestCase">
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudIcon Icon="@testBrowser.GetIcon(context.Item.TestCase)"/>
                            @context.Item.TestCase.Name
                        </MudStack>
                    </Draggable>
                }
                @if (context.Item.Folder is not null)
                {
                    <Draggable T="TestEntity" Data="@context.Item.Folder">
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudIcon Icon="@testBrowser.GetIcon(context.Item.Folder)" />
                            @context.Item.Folder.Name
                        </MudStack>

                    </Draggable>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="@loc["modified"]">
            <CellTemplate>
                @if (context.Item.TestCase is not null)
                {
                    @context.Item.TestCase.Modified.Humanize()
                }
                @if (context.Item.Folder is not null)
                {
                    @context.Item.Folder.Modified.Humanize()
                }
            </CellTemplate>
        </TemplateColumn>

        @* <PropertyColumn Property="x => x.Path" Title="Path" /> *@

        @* @foreach (var column in _columns) *@
        @* { *@
        @*     <TemplateColumn Title="@column.Name"> *@
        @*         <CellTemplate> *@
        @*             @if (context.Item.TestCaseFields is not null) *@
        @*             { *@
        @*                 foreach (var field in context.Item.TestCaseFields.Where(x => x.FieldDefinitionId == column.Id)) *@
        @*                 { *@
        @*                     if (field.StringValue is not null) *@
        @*                     { *@
        @*                         <MudText>@field.StringValue?.ToString()</MudText> *@
        @*                     } *@
        @*                     if (field.StringValuesList is not null) *@
        @*                     { *@
        @*                         <MudText>@string.Join(", ", field.StringValuesList)</MudText> *@
        @*                     } *@
        @*                 } *@
        @*             } *@
        @*         </CellTemplate> *@
        @*     </TemplateColumn> *@
        @* } *@
    </Columns>

    <PagerContent>
        <MudDataGridPager T="TestSuiteItem" />
    </PagerContent>
</MudDataGrid>
