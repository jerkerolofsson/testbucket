@using TestBucket.Components.Uploads.Services
@using TestBucket.Formats

@inject TestCaseEditorController testCaseEditorService
@inject AttachmentsService attachmentsService
@inject IStringLocalizer<SharedStrings> loc
@inject IStringLocalizer<ImportStrings> importLoc

<EditForm Model="@_options" OnValidSubmit="Submit">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild" Style="min-width: 30vw">
        <DialogContent>
            <MudStack>
                @if (_options.File is null)
                {
                    <UploadResults FileUploaded="OnFileUploaded" />
                }
                <Field Row>
                    <FieldHeader>Format</FieldHeader>
                    <MudSpacer/>
                    <MudSelect T="TestResultFormat" @bind-Value="_options.Format" Variant="Variant.Outlined">
                        <MudSelectItem Value="@TestResultFormat.JUnitXml">JUnit XML</MudSelectItem>
                        <MudSelectItem Value="@TestResultFormat.xUnitXml">xUnit XML</MudSelectItem>
                        <MudSelectItem Value="@TestResultFormat.MicrosoftTrx">Microsoft TRX</MudSelectItem>
                        <MudSelectItem Value="@TestResultFormat.CommonTestReportFormat">CTRF</MudSelectItem>
                    </MudSelect>
                </Field>

                <Field Row>
                    <div>
                        <FieldHeader>@importLoc["remove-class-name-from-test-name"]</FieldHeader>
                        <FieldDescription>@importLoc["remove-class-name-from-test-name-description"]</FieldDescription>
                    </div>
                    <MudSpacer/>
                    <MudSwitchM3 @bind-Value="@_options.HandlingOptions.RemoveClassNameFromTestName" Color="Color.Tertiary"/>
                </Field>
                    

                <Field Row>
                    <div>
                        <FieldHeader>@importLoc["create-folders-from-package"]</FieldHeader>
                        <FieldDescription>@importLoc["create-folders-from-package-description"]</FieldDescription>
                    </div>
                    <MudSpacer />
                    <MudSwitchM3 @bind-Value="@_options.HandlingOptions.CreateFoldersFromClassNamespace" Color="Color.Tertiary" />
                </Field>

                <Field Row>
                    <div>
                        <FieldHeader>@importLoc["create-test-suite-from-assembly-name"]</FieldHeader>
                        <FieldDescription>@importLoc["create-test-suite-from-assembly-name-description"]</FieldDescription>
                    </div>
                    <MudSpacer />
                    <MudSwitchM3 @bind-Value="@_options.HandlingOptions.CreateTestSuiteFromAssemblyName" Color="Color.Tertiary" />
                </Field>

            </MudStack>
        </DialogContent>

        <DialogActions>
            @if (_options.File is not null)
            {
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">@loc["ok"]</MudButton>
            }
            <MudButton OnClick="Close">@loc["cancel"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>


@code {
    private ImportOptions _options = new();

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    private Task OnFileUploaded(FileResource file)
    {
        _options.File = file;

        DetectFormat(file);
        return Task.CompletedTask;
    }

    private void DetectFormat(FileResource file)
    {
        var format = TestResultDetector.Detect(file.Data);
        if(format != TestResultFormat.UnknownFormat)
        {
            _options.Format = format;
        }
    }

    private void Submit()
    {
        if (_options.File is not null)
        {
            MudDialog.Close(_options);
        }
    }

    private void Close()
    {
        MudDialog.Close();
    }
}

