@using TestBucket.Components.Teams
@using TestBucket.Components.Teams.Controls
@using TestBucket.Components.Uploads.Controls
@using TestBucket.Domain.Files.Models
@using TestBucket.Domain.Teams.Models
@inject ProjectService projectService
@inject TeamService teamService

@if (Project is not null)
{
    <EditForm Model="@Project" OnValidSubmit="async () => await OnValidSubmitAsync()">

        <MudStack Class="pa-5">

            <MudText Typo="Typo.h3">Name</MudText>
            <Field Row>
                <FieldHeader>Name of the project</FieldHeader>
                <MudSpacer/>
                <MudTextField Variant="Variant.Outlined" T="string" @bind-Value="@Project.Name"></MudTextField>
            </Field>

            <MudText Typo="Typo.h3" Class="pa-3">Appearance</MudText>
            <Field>
                <MudStack Row AlignItems="AlignItems.Start"> 
                    <FieldHeader>Project Icon</FieldHeader>
                    <MudSpacer/>
                    @if(!string.IsNullOrEmpty(Project.IconUrl))
                    {
                        <MudImage Src="@Project.IconUrl" Width="64" Height="64"/>
                    }
                </MudStack>
                        
                <UploadFile Accept=".png" FileUploaded="OnImageUploaded" />
            </Field>

                    
            <MudText Typo="Typo.h3" Class="pa-3">Access</MudText>
            <Field Row>
                <FieldHeader>Team</FieldHeader>
                <MudSpacer/>
                <TeamDropDown SelectedTeam="_team" SelectedTeamChanged="OnTeamChanged" />
            </Field>

            <Field Row>
                <FieldHeader>Grant access to all users</FieldHeader>
                <MudSpacer/>
                <MudSwitchM3 T="bool" @bind-Value="@Project.GrantAccessToAllTenantUsers"/>
            </Field>

            <Field Row Spacing="3">
                <FieldHeader>Slug</FieldHeader>
                <MudText>@Project.Slug</MudText>

                <FieldHeader>ID</FieldHeader>
                <MudText>@Project.Id</MudText>
            </Field>
        </MudStack>
          
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Save</MudButton>
    </EditForm>
}

@code {
    [Parameter] public TestProject? Project { get; set; }

    private Team? _team;

    private async Task OnValidSubmitAsync()
    {
        if (Project is not null)
        {
            await projectService.SaveProjectAsync(Project);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Project?.TeamId is not null)
        {
            _team = await teamService.GetTeamByIdAsync(Project.TeamId.Value);
        }
    }

    private void OnTeamChanged(Team? team)
    {
        _team = team;
        if(Project is not null)
        {
            Project.TeamId = team?.Id;
        }
    }

    private void OnImageUploaded(FileResource file)
    {
        if(Project is not null)
        {
            Project.IconUrl = $"/api/resources/{file.Id}";
        }
    }
}
