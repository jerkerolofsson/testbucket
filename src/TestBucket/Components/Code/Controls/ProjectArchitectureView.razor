@using TestBucket.Domain.Code.Yaml
@using TestBucket.Domain.Code.Yaml.Models

<div class="tb-architecture-view">

    @if(_browser is not null)
    {
        foreach(var system in _browser.GetSystems())
        {
            <div class="system" style="@GetStyle(system)">
                <div class="title">@system.Name</div>
                <div class="children">
                    @foreach(var tier in  _browser.GetLayerDisplayTiersWithin(system))
                    {
                        <div class="tier" data-tier="@tier">
                            @foreach(var layer in _browser.GetLayersWithin(system, tier))
                            {
                                <div class="layer" style="@GetStyle(layer)">
                                    <div class="title">@layer.Name</div>
                                    <div class="children">
                                        @foreach(var component in _browser.GetComponentsWithin(layer))
                                        {
                                            string cssClass = "component";
                                            if (_browser.IsSelectedComponent(SelectedItems, component))
                                            {
                                                cssClass += " feature-component";
                                            }

                                            <div class="@cssClass" style="@GetStyle(component)">
                                                <div class="title">@component.Name</div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

@code 
{
    [Parameter] public ProjectArchitectureModel? Model { get; set; }
    [Parameter] public IReadOnlyList<NamedArchitecturalComponent>? SelectedItems { get; set; }

    private ArchitecturalComponentBrowser? _browser;

    private string GetStyle(NamedArchitecturalComponent component)
    {
        var sb = new StringBuilder();
        if(component.Display is not null)
        {
            if(component.Display.BackColor is not null)
            {
                sb.Append($"background-color: {component.Display.BackColor};");
            }
            if(component.Display.ForeColor is not null)
            {
                sb.Append($"color: {component.Display.ForeColor};");
            }
        }
        return sb.ToString();
    }

    protected override void OnInitialized()
    {
        if (Model is not null)
        {
            _browser = new ArchitecturalComponentBrowser(Model);
        }
    }
    protected override void OnParametersSet()
    {
        if (Model is not null)
        {
            _browser = new ArchitecturalComponentBrowser(Model);
        }
    }
}
