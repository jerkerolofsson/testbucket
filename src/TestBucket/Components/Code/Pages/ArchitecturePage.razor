@attribute [Authorize()]
@page "/{TenantId}/Code/Architecture"
@layout CodeLayout
@inject ArchitectureController controller
@inject AppNavigationManager appNavigationManager
@inject IStringLocalizer<CodeStrings> loc

<MudStack Class="pa-2">
    <MudStack Class="pa-2" Row Style="width: 100%" AlignItems="AlignItems.Center">
        <MudText Typo="Typo.h1">@loc["architecture"]</MudText>
        <MudSpacer/>
        <MudIconButton Href="@appNavigationManager.GetCodeArchitectureYamlToolUrl()" Icon="@Icons.Material.Filled.Edit"/>
    </MudStack>
    <TestBucket.Components.Code.Controls.ProjectArchitectureView Model="@_model"/>
</MudStack>

@code {
    [Parameter] public string? TenantId { get; set; }
    [CascadingParameter] public TestProject? Project { get; set; }

    private ProjectArchitectureModel? _model;

    protected override async Task OnInitializedAsync()
    {
        if(Project is not null)
        {
            _model = await controller.GetProductArchitectureAsync(Project);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Project is not null)
        {
            _model = await controller.GetProductArchitectureAsync(Project);
        }
    }
}