@using System.Text.Json
@using System.Xml.Linq
@using TestBucket.Components.Uploads.Services
@using TestBucket.Domain.Testing.ImportExport
@inject AttachmentsService controller
@inject IJSRuntime js

@if (_resource is not null)
{
    <CodeBlock Language="javascript" Code="@_text"></CodeBlock>
}
else
{
    <MudProgressLinear Indeterminate Color="Color.Tertiary"/>
}


@code {
    [Parameter] public FileResource? Resource { get; set; }
    private FileResource? _resource;
    private string _text = "";
    private string _elementId = "code-block-" + Guid.NewGuid().ToString();

    protected override async Task OnParametersSetAsync()
    {
        if (_resource?.Id != Resource?.Id && Resource is not null)
        {
            _resource = Resource;
            var resource = await controller.GetResourceByIdAsync(Resource.Id);
            if (resource is not null)
            {
                _resource = resource;
            }
            if(_resource is not null)
            {
                _text = TextConversionUtils.FromBomEncoded(_resource.Data);
            }
        }
    }
}
