@using TestBucket.Domain.Requirements.Models
@inject IStringLocalizer<SharedStrings> loc

<MudDialog DefaultFocus="DefaultFocus.FirstChild">
    <DialogContent>
        <RequirementPicker Project="@Project" Team="@Team" SelectedRequirement="@SelectedRequirement"
            RequirementSelected="OnRequirementSelected"/>
    </DialogContent>

    <DialogActions>
        @if (_requirement is not null)
        {
            <MudButton OnClick="OnValidSubmit" Color="Color.Primary">@loc["ok"]</MudButton>
        }
        <MudButton OnClick="Close">@loc["cancel"]</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public Requirement? SelectedRequirement { get; set; }
    [Parameter] public TestProject? Project { get; set; }

    [Parameter] public Team? Team { get; set; }

    private Requirement? _requirement;

    protected override void OnParametersSet()
    {
        _requirement ??= SelectedRequirement;
    }

    private void OnRequirementSelected(Requirement requirement)
    {
        _requirement = requirement;
    }

    private void Close()
    {
        MudDialog.Close();
    }

    private void OnValidSubmit()
    {
        if (_requirement is null)
        {
            return;
        }
        MudDialog.Close(_requirement);
    }
}

