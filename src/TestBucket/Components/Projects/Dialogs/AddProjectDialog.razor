@attribute [Authorize(Roles = "ADMIN")]
@inject ProjectService projectService

<EditForm Model="@_name" OnValidSubmit="async () => await OnValidSubmitAsync()">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild">
        <TitleContent>Add new project</TitleContent>
        <DialogContent>
            <MudStack Spacing="0">
                @if (_name is not null)
                {
                    <MudTextField Variant="Variant.Outlined" T="string" ValueChanged="OnValueChanged" Value="@_name"></MudTextField>

                    <MudStack Spacing="1" Row="true">
                        <MudTooltip Text="Slug"><MudText Style="background: black; font-size: 7pt">@_slug</MudText></MudTooltip>
                        <MudTooltip Text="Short Name"><MudText Style="background: black; font-size: 7pt">@_shortName</MudText></MudTooltip>
                    </MudStack>
                }
                @if(_errorMessage is not null)
                {
                    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
                }
            </MudStack>
        </DialogContent>

        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">OK</MudButton>
            <MudButton OnClick="Close">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>


@code {
    private string _name = "";
    private string _slug = "";
    private string _shortName = "";

    private string? _errorMessage;

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    private async Task OnValueChanged(string name)
    {
        _name = name;
        _slug = projectService.GenerateSlug(name);
        _shortName = await projectService.GenerateShortNameAsync(_slug);

    }

    private void Close()
    {
        MudDialog.Close();
    }

    private async Task OnValidSubmitAsync()
    {
        if(string.IsNullOrWhiteSpace(_name))
        {
            _errorMessage = "Invalid name";
            return;
        }

        var result = await projectService.CreateAsync(_name);
        if(result.IsT0)
        {
            MudDialog.Close(result.AsT0);
        }
        else
        {
            _errorMessage = result.Match(
                (success) => "",
                (alreadyExists) => "Already exists"
            );
        }
    }
}
