@using TestBucket.Components.Metrics.Controls
@using TestBucket.Components.Metrics.Controls.Controls
@inject IStringLocalizer<SharedStrings> loc

@if(TestCaseRun is not null)
{
    
    @if(TestCaseRun.Metrics is not null && TestCaseRun.Metrics.Count > 0)
    {
        <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
            <MudIcon Icon="@TbIcons.Filled.Gauge"/>
            <MudText Typo="Typo.h2">@loc["metrics"]</MudText>
        </MudStack>
        
        <MetricsGridView ReadOnly TestCaseRun="@TestCaseRun" />
    }
    @if (TestCaseRun.LinkedIssues is not null && TestCaseRun.LinkedIssues.Count > 0)
    {
        <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
            <MudIcon Icon="@TbIcons.BoldDuoTone.Bug"/>
            <MudText Typo="Typo.h2">@loc["issues"]</MudText>
        </MudStack>

        <LinkedIssuesTable ReadOnly TestCaseRun="@TestCaseRun" />
    }

    if (!string.IsNullOrEmpty(TestCaseRun.Message))
    {
        <MudText Typo="Typo.h2">@loc["test-log"]</MudText>
        <MarkdownEditor ShowToolbar="false" Preview Value="@TestCaseRun.Message" />
    }

    if (!string.IsNullOrEmpty(TestCaseRun.CallStack))
    {
        <MudText Typo="Typo.h2">@loc["call-stack"]</MudText>
        <MudText><pre>@TestCaseRun.CallStack</pre></MudText>
    }

    if (!string.IsNullOrEmpty(TestCaseRun.SystemOut))
    {
        <MudText Typo="Typo.h2">@loc["std-out"]</MudText>
        <MudText><pre>@TestCaseRun.SystemOut</pre></MudText>
    }

    <Field>
        <FieldHeader>@loc["attachments"]</FieldHeader>
        <AttachmentGrid TestCaseRunId="@TestCaseRun.Id" Style="width: 100%" AllowUpload="false"/>
    </Field>
}

@code {
    [Parameter] public TestCaseRun? TestCaseRun { get; set; }
}
