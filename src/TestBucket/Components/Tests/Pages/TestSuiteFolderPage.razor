@attribute [Authorize()]
@page "/{TenantId}/Testing/TestSuites/{SuiteId:long}/Folders/{FolderId:long}"
@layout TestingLayout
@inject TestBrowser testBrowser
@inject AppNavigationManager appNavigationManager

<div class="container-fill-2-rows">
    <MudToolBar Class="tb-toolbar">
        <PathNavigation FolderId="@FolderId" />
    </MudToolBar>

    <Splitter Style="height: 100%; width:100%" Bordered="false" Dimension="80" EnableMargin="false" Color="Color.Tertiary">
        <StartContent>
            <TestCaseGrid 
                Project="@Project"
                TestSuiteId="@SuiteId" FolderId="@FolderId" CompareFolder="true" OnTestCaseClicked="OnTestCaseClicked" />
        </StartContent>
        <EndContent>
            <MudStack Class="pa-2" Style="width: 100%">
                <TestSuiteFolderEditor Folder="@_testSuiteFolder" />
            </MudStack>
        </EndContent>
    </Splitter>
</div>

@code {
    [Parameter] public string TenantId { get; set; } = "";
    [CascadingParameter] public TestProject? Project { get; set; }
    [CascadingParameter] public Team? Team { get; set; }

    [Parameter] public long SuiteId { get; set; }
    [Parameter] public long FolderId { get; set; }

    private TestSuiteFolder? _testSuiteFolder = null;


    /// <summary>
    /// Load the test suite when changed
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (_testSuiteFolder is null || _testSuiteFolder.Id != FolderId)
        {
            _testSuiteFolder = await testBrowser.GetTestSuiteFolderByIdAsync(FolderId);
        }
    }

    private void OnTestCaseClicked(TestCase testCase)
    {
        appNavigationManager.NavigateTo(testCase);
    }

}
